// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: monitoring.proto

#include "monitoring.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace monitoring {

inline constexpr MonitoringResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : alert_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alert_level_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recommended_action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MonitoringResponse::MonitoringResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MonitoringResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonitoringResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonitoringResponseDefaultTypeInternal() {}
  union {
    MonitoringResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonitoringResponseDefaultTypeInternal _MonitoringResponse_default_instance_;

inline constexpr DeviceID::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceID::DeviceID(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceIDDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceIDDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceIDDefaultTypeInternal() {}
  union {
    DeviceID _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceIDDefaultTypeInternal _DeviceID_default_instance_;
}  // namespace monitoring
static ::_pb::Metadata file_level_metadata_monitoring_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_monitoring_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_monitoring_2eproto = nullptr;
const ::uint32_t TableStruct_monitoring_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::monitoring::DeviceID, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::monitoring::DeviceID, _impl_.device_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::monitoring::MonitoringResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::monitoring::MonitoringResponse, _impl_.alert_message_),
    PROTOBUF_FIELD_OFFSET(::monitoring::MonitoringResponse, _impl_.alert_level_),
    PROTOBUF_FIELD_OFFSET(::monitoring::MonitoringResponse, _impl_.recommended_action_),
    PROTOBUF_FIELD_OFFSET(::monitoring::MonitoringResponse, _impl_.timestamp_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::monitoring::DeviceID)},
        {9, -1, -1, sizeof(::monitoring::MonitoringResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::monitoring::_DeviceID_default_instance_._instance,
    &::monitoring::_MonitoringResponse_default_instance_._instance,
};
const char descriptor_table_protodef_monitoring_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\020monitoring.proto\022\nmonitoring\"\035\n\010Device"
    "ID\022\021\n\tdevice_id\030\001 \001(\005\"o\n\022MonitoringRespo"
    "nse\022\025\n\ralert_message\030\001 \001(\t\022\023\n\013alert_leve"
    "l\030\002 \001(\t\022\032\n\022recommended_action\030\003 \001(\t\022\021\n\tt"
    "imestamp\030\004 \001(\t2c\n\021MonitoringService\022N\n\024S"
    "treamMonitoringData\022\024.monitoring.DeviceI"
    "D\032\036.monitoring.MonitoringResponse0\001b\006pro"
    "to3"
};
static ::absl::once_flag descriptor_table_monitoring_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_monitoring_2eproto = {
    false,
    false,
    283,
    descriptor_table_protodef_monitoring_2eproto,
    "monitoring.proto",
    &descriptor_table_monitoring_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_monitoring_2eproto::offsets,
    file_level_metadata_monitoring_2eproto,
    file_level_enum_descriptors_monitoring_2eproto,
    file_level_service_descriptors_monitoring_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_monitoring_2eproto_getter() {
  return &descriptor_table_monitoring_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_monitoring_2eproto(&descriptor_table_monitoring_2eproto);
namespace monitoring {
// ===================================================================

class DeviceID::_Internal {
 public:
};

DeviceID::DeviceID(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:monitoring.DeviceID)
}
DeviceID::DeviceID(
    ::google::protobuf::Arena* arena, const DeviceID& from)
    : DeviceID(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DeviceID::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DeviceID::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.device_id_ = {};
}
DeviceID::~DeviceID() {
  // @@protoc_insertion_point(destructor:monitoring.DeviceID)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceID::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceID::Clear() {
// @@protoc_insertion_point(message_clear_start:monitoring.DeviceID)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceID::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> DeviceID::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceID_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 device_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceID, _impl_.device_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceID, _impl_.device_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 device_id = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceID, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* DeviceID::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:monitoring.DeviceID)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 device_id = 1;
  if (this->_internal_device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_device_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:monitoring.DeviceID)
  return target;
}

::size_t DeviceID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:monitoring.DeviceID)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 device_id = 1;
  if (this->_internal_device_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_device_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceID::_class_data_ = {
    DeviceID::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceID::GetClassData() const {
  return &_class_data_;
}

void DeviceID::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceID*>(&to_msg);
  auto& from = static_cast<const DeviceID&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:monitoring.DeviceID)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_device_id() != 0) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceID::CopyFrom(const DeviceID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:monitoring.DeviceID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceID::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceID::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceID::InternalSwap(DeviceID* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.device_id_, other->_impl_.device_id_);
}

::google::protobuf::Metadata DeviceID::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_monitoring_2eproto_getter, &descriptor_table_monitoring_2eproto_once,
      file_level_metadata_monitoring_2eproto[0]);
}
// ===================================================================

class MonitoringResponse::_Internal {
 public:
};

MonitoringResponse::MonitoringResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:monitoring.MonitoringResponse)
}
inline PROTOBUF_NDEBUG_INLINE MonitoringResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : alert_message_(arena, from.alert_message_),
        alert_level_(arena, from.alert_level_),
        recommended_action_(arena, from.recommended_action_),
        timestamp_(arena, from.timestamp_),
        _cached_size_{0} {}

MonitoringResponse::MonitoringResponse(
    ::google::protobuf::Arena* arena,
    const MonitoringResponse& from)
    : ::google::protobuf::Message(arena) {
  MonitoringResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:monitoring.MonitoringResponse)
}
inline PROTOBUF_NDEBUG_INLINE MonitoringResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : alert_message_(arena),
        alert_level_(arena),
        recommended_action_(arena),
        timestamp_(arena),
        _cached_size_{0} {}

inline void MonitoringResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MonitoringResponse::~MonitoringResponse() {
  // @@protoc_insertion_point(destructor:monitoring.MonitoringResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MonitoringResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.alert_message_.Destroy();
  _impl_.alert_level_.Destroy();
  _impl_.recommended_action_.Destroy();
  _impl_.timestamp_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MonitoringResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:monitoring.MonitoringResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.alert_message_.ClearToEmpty();
  _impl_.alert_level_.ClearToEmpty();
  _impl_.recommended_action_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MonitoringResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 89, 2> MonitoringResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MonitoringResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string timestamp = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringResponse, _impl_.timestamp_)}},
    // string alert_message = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringResponse, _impl_.alert_message_)}},
    // string alert_level = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringResponse, _impl_.alert_level_)}},
    // string recommended_action = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MonitoringResponse, _impl_.recommended_action_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string alert_message = 1;
    {PROTOBUF_FIELD_OFFSET(MonitoringResponse, _impl_.alert_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string alert_level = 2;
    {PROTOBUF_FIELD_OFFSET(MonitoringResponse, _impl_.alert_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string recommended_action = 3;
    {PROTOBUF_FIELD_OFFSET(MonitoringResponse, _impl_.recommended_action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(MonitoringResponse, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\15\13\22\11\0\0\0"
    "monitoring.MonitoringResponse"
    "alert_message"
    "alert_level"
    "recommended_action"
    "timestamp"
  }},
};

::uint8_t* MonitoringResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:monitoring.MonitoringResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string alert_message = 1;
  if (!this->_internal_alert_message().empty()) {
    const std::string& _s = this->_internal_alert_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "monitoring.MonitoringResponse.alert_message");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string alert_level = 2;
  if (!this->_internal_alert_level().empty()) {
    const std::string& _s = this->_internal_alert_level();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "monitoring.MonitoringResponse.alert_level");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string recommended_action = 3;
  if (!this->_internal_recommended_action().empty()) {
    const std::string& _s = this->_internal_recommended_action();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "monitoring.MonitoringResponse.recommended_action");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string timestamp = 4;
  if (!this->_internal_timestamp().empty()) {
    const std::string& _s = this->_internal_timestamp();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "monitoring.MonitoringResponse.timestamp");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:monitoring.MonitoringResponse)
  return target;
}

::size_t MonitoringResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:monitoring.MonitoringResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string alert_message = 1;
  if (!this->_internal_alert_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_alert_message());
  }

  // string alert_level = 2;
  if (!this->_internal_alert_level().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_alert_level());
  }

  // string recommended_action = 3;
  if (!this->_internal_recommended_action().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_recommended_action());
  }

  // string timestamp = 4;
  if (!this->_internal_timestamp().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MonitoringResponse::_class_data_ = {
    MonitoringResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MonitoringResponse::GetClassData() const {
  return &_class_data_;
}

void MonitoringResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MonitoringResponse*>(&to_msg);
  auto& from = static_cast<const MonitoringResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:monitoring.MonitoringResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_alert_message().empty()) {
    _this->_internal_set_alert_message(from._internal_alert_message());
  }
  if (!from._internal_alert_level().empty()) {
    _this->_internal_set_alert_level(from._internal_alert_level());
  }
  if (!from._internal_recommended_action().empty()) {
    _this->_internal_set_recommended_action(from._internal_recommended_action());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MonitoringResponse::CopyFrom(const MonitoringResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:monitoring.MonitoringResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MonitoringResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MonitoringResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MonitoringResponse::InternalSwap(MonitoringResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alert_message_, &other->_impl_.alert_message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alert_level_, &other->_impl_.alert_level_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recommended_action_, &other->_impl_.recommended_action_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
}

::google::protobuf::Metadata MonitoringResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_monitoring_2eproto_getter, &descriptor_table_monitoring_2eproto_once,
      file_level_metadata_monitoring_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace monitoring
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
