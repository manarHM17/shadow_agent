// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ota_service.proto

#include "ota_service.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ota {

inline constexpr UpdateStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}},
        acknowledged_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateStatusResponse::UpdateStatusResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateStatusResponseDefaultTypeInternal() {}
  union {
    UpdateStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateStatusResponseDefaultTypeInternal _UpdateStatusResponse_default_instance_;

inline constexpr UpdateStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : firmware_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_id_{0},
        status_{static_cast< ::ota::UpdateStatus >(0)},
        timestamp_{::int64_t{0}},
        progress_percentage_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateStatusRequest::UpdateStatusRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateStatusRequestDefaultTypeInternal() {}
  union {
    UpdateStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateStatusRequestDefaultTypeInternal _UpdateStatusRequest_default_instance_;

inline constexpr UpdateCheckRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : current_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hardware_model_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}},
        device_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateCheckRequest::UpdateCheckRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateCheckRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateCheckRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateCheckRequestDefaultTypeInternal() {}
  union {
    UpdateCheckRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateCheckRequestDefaultTypeInternal _UpdateCheckRequest_default_instance_;

inline constexpr FirmwareInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        filename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        checksum_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        release_notes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_size_{::int64_t{0}},
        is_critical_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FirmwareInfo::FirmwareInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FirmwareInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FirmwareInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FirmwareInfoDefaultTypeInternal() {}
  union {
    FirmwareInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FirmwareInfoDefaultTypeInternal _FirmwareInfo_default_instance_;

inline constexpr DownloadResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{::int64_t{0}},
        total_size_{::int64_t{0}},
        is_last_chunk_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DownloadResponse::DownloadResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DownloadResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DownloadResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DownloadResponseDefaultTypeInternal() {}
  union {
    DownloadResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DownloadResponseDefaultTypeInternal _DownloadResponse_default_instance_;

inline constexpr DownloadRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : firmware_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{::int64_t{0}},
        device_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DownloadRequest::DownloadRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DownloadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DownloadRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DownloadRequestDefaultTypeInternal() {}
  union {
    DownloadRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DownloadRequestDefaultTypeInternal _DownloadRequest_default_instance_;

inline constexpr UpdateCheckResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        firmware_info_{nullptr},
        timestamp_{::int64_t{0}},
        update_available_{false} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateCheckResponse::UpdateCheckResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateCheckResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateCheckResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateCheckResponseDefaultTypeInternal() {}
  union {
    UpdateCheckResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateCheckResponseDefaultTypeInternal _UpdateCheckResponse_default_instance_;
}  // namespace ota
static ::_pb::Metadata file_level_metadata_ota_5fservice_2eproto[7];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ota_5fservice_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ota_5fservice_2eproto = nullptr;
const ::uint32_t TableStruct_ota_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ota::UpdateCheckRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ota::UpdateCheckRequest, _impl_.device_id_),
    PROTOBUF_FIELD_OFFSET(::ota::UpdateCheckRequest, _impl_.current_version_),
    PROTOBUF_FIELD_OFFSET(::ota::UpdateCheckRequest, _impl_.hardware_model_),
    PROTOBUF_FIELD_OFFSET(::ota::UpdateCheckRequest, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::ota::UpdateCheckResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ota::UpdateCheckResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ota::UpdateCheckResponse, _impl_.update_available_),
    PROTOBUF_FIELD_OFFSET(::ota::UpdateCheckResponse, _impl_.firmware_info_),
    PROTOBUF_FIELD_OFFSET(::ota::UpdateCheckResponse, _impl_.timestamp_),
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ota::FirmwareInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ota::FirmwareInfo, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::ota::FirmwareInfo, _impl_.filename_),
    PROTOBUF_FIELD_OFFSET(::ota::FirmwareInfo, _impl_.file_size_),
    PROTOBUF_FIELD_OFFSET(::ota::FirmwareInfo, _impl_.checksum_),
    PROTOBUF_FIELD_OFFSET(::ota::FirmwareInfo, _impl_.release_notes_),
    PROTOBUF_FIELD_OFFSET(::ota::FirmwareInfo, _impl_.is_critical_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ota::DownloadRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ota::DownloadRequest, _impl_.device_id_),
    PROTOBUF_FIELD_OFFSET(::ota::DownloadRequest, _impl_.firmware_version_),
    PROTOBUF_FIELD_OFFSET(::ota::DownloadRequest, _impl_.offset_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ota::DownloadResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ota::DownloadResponse, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::ota::DownloadResponse, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::ota::DownloadResponse, _impl_.total_size_),
    PROTOBUF_FIELD_OFFSET(::ota::DownloadResponse, _impl_.is_last_chunk_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ota::UpdateStatusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ota::UpdateStatusRequest, _impl_.device_id_),
    PROTOBUF_FIELD_OFFSET(::ota::UpdateStatusRequest, _impl_.firmware_version_),
    PROTOBUF_FIELD_OFFSET(::ota::UpdateStatusRequest, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::ota::UpdateStatusRequest, _impl_.error_message_),
    PROTOBUF_FIELD_OFFSET(::ota::UpdateStatusRequest, _impl_.progress_percentage_),
    PROTOBUF_FIELD_OFFSET(::ota::UpdateStatusRequest, _impl_.timestamp_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ota::UpdateStatusResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ota::UpdateStatusResponse, _impl_.acknowledged_),
    PROTOBUF_FIELD_OFFSET(::ota::UpdateStatusResponse, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::ota::UpdateStatusResponse, _impl_.timestamp_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ota::UpdateCheckRequest)},
        {12, 23, -1, sizeof(::ota::UpdateCheckResponse)},
        {26, -1, -1, sizeof(::ota::FirmwareInfo)},
        {40, -1, -1, sizeof(::ota::DownloadRequest)},
        {51, -1, -1, sizeof(::ota::DownloadResponse)},
        {63, -1, -1, sizeof(::ota::UpdateStatusRequest)},
        {77, -1, -1, sizeof(::ota::UpdateStatusResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ota::_UpdateCheckRequest_default_instance_._instance,
    &::ota::_UpdateCheckResponse_default_instance_._instance,
    &::ota::_FirmwareInfo_default_instance_._instance,
    &::ota::_DownloadRequest_default_instance_._instance,
    &::ota::_DownloadResponse_default_instance_._instance,
    &::ota::_UpdateStatusRequest_default_instance_._instance,
    &::ota::_UpdateStatusResponse_default_instance_._instance,
};
const char descriptor_table_protodef_ota_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\021ota_service.proto\022\003ota\"k\n\022UpdateCheckR"
    "equest\022\021\n\tdevice_id\030\001 \001(\005\022\027\n\017current_ver"
    "sion\030\002 \001(\t\022\026\n\016hardware_model\030\003 \001(\t\022\021\n\tti"
    "mestamp\030\004 \001(\003\"l\n\023UpdateCheckResponse\022\030\n\020"
    "update_available\030\001 \001(\010\022(\n\rfirmware_info\030"
    "\002 \001(\0132\021.ota.FirmwareInfo\022\021\n\ttimestamp\030\003 "
    "\001(\003\"\202\001\n\014FirmwareInfo\022\017\n\007version\030\001 \001(\t\022\020\n"
    "\010filename\030\002 \001(\t\022\021\n\tfile_size\030\003 \001(\003\022\020\n\010ch"
    "ecksum\030\004 \001(\t\022\025\n\rrelease_notes\030\005 \001(\t\022\023\n\013i"
    "s_critical\030\006 \001(\010\"N\n\017DownloadRequest\022\021\n\td"
    "evice_id\030\001 \001(\005\022\030\n\020firmware_version\030\002 \001(\t"
    "\022\016\n\006offset\030\003 \001(\003\"[\n\020DownloadResponse\022\014\n\004"
    "data\030\001 \001(\014\022\016\n\006offset\030\002 \001(\003\022\022\n\ntotal_size"
    "\030\003 \001(\003\022\025\n\ris_last_chunk\030\004 \001(\010\"\254\001\n\023Update"
    "StatusRequest\022\021\n\tdevice_id\030\001 \001(\005\022\030\n\020firm"
    "ware_version\030\002 \001(\t\022!\n\006status\030\003 \001(\0162\021.ota"
    ".UpdateStatus\022\025\n\rerror_message\030\004 \001(\t\022\033\n\023"
    "progress_percentage\030\005 \001(\005\022\021\n\ttimestamp\030\006"
    " \001(\003\"P\n\024UpdateStatusResponse\022\024\n\014acknowle"
    "dged\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\022\021\n\ttimestamp"
    "\030\003 \001(\003*\264\001\n\014UpdateStatus\022\010\n\004IDLE\020\000\022\017\n\013DOW"
    "NLOADING\020\001\022\026\n\022DOWNLOAD_COMPLETED\020\002\022\r\n\tVE"
    "RIFYING\020\003\022\016\n\nINSTALLING\020\004\022\023\n\017REBOOT_REQU"
    "IRED\020\005\022\022\n\016UPDATE_SUCCESS\020\006\022\021\n\rUPDATE_FAI"
    "LED\020\007\022\026\n\022ROLLBACK_COMPLETED\020\0102\346\001\n\nOTASer"
    "vice\022H\n\017CheckForUpdates\022\027.ota.UpdateChec"
    "kRequest\032\030.ota.UpdateCheckResponse(\0010\001\022\?"
    "\n\016DownloadUpdate\022\024.ota.DownloadRequest\032\025"
    ".ota.DownloadResponse0\001\022M\n\022ReportUpdateS"
    "tatus\022\030.ota.UpdateStatusRequest\032\031.ota.Up"
    "dateStatusResponse(\0010\001b\006proto3"
};
static ::absl::once_flag descriptor_table_ota_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ota_5fservice_2eproto = {
    false,
    false,
    1230,
    descriptor_table_protodef_ota_5fservice_2eproto,
    "ota_service.proto",
    &descriptor_table_ota_5fservice_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_ota_5fservice_2eproto::offsets,
    file_level_metadata_ota_5fservice_2eproto,
    file_level_enum_descriptors_ota_5fservice_2eproto,
    file_level_service_descriptors_ota_5fservice_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ota_5fservice_2eproto_getter() {
  return &descriptor_table_ota_5fservice_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ota_5fservice_2eproto(&descriptor_table_ota_5fservice_2eproto);
namespace ota {
const ::google::protobuf::EnumDescriptor* UpdateStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ota_5fservice_2eproto);
  return file_level_enum_descriptors_ota_5fservice_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t UpdateStatus_internal_data_[] = {
    589824u, 0u, };
bool UpdateStatus_IsValid(int value) {
  return 0 <= value && value <= 8;
}
// ===================================================================

class UpdateCheckRequest::_Internal {
 public:
};

UpdateCheckRequest::UpdateCheckRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ota.UpdateCheckRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateCheckRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : current_version_(arena, from.current_version_),
        hardware_model_(arena, from.hardware_model_),
        _cached_size_{0} {}

UpdateCheckRequest::UpdateCheckRequest(
    ::google::protobuf::Arena* arena,
    const UpdateCheckRequest& from)
    : ::google::protobuf::Message(arena) {
  UpdateCheckRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, device_id_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::device_id_));

  // @@protoc_insertion_point(copy_constructor:ota.UpdateCheckRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateCheckRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : current_version_(arena),
        hardware_model_(arena),
        _cached_size_{0} {}

inline void UpdateCheckRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, device_id_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::device_id_));
}
UpdateCheckRequest::~UpdateCheckRequest() {
  // @@protoc_insertion_point(destructor:ota.UpdateCheckRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateCheckRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.current_version_.Destroy();
  _impl_.hardware_model_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UpdateCheckRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ota.UpdateCheckRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.current_version_.ClearToEmpty();
  _impl_.hardware_model_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.device_id_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.device_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateCheckRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 60, 2> UpdateCheckRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UpdateCheckRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 timestamp = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UpdateCheckRequest, _impl_.timestamp_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCheckRequest, _impl_.timestamp_)}},
    // int32 device_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateCheckRequest, _impl_.device_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCheckRequest, _impl_.device_id_)}},
    // string current_version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCheckRequest, _impl_.current_version_)}},
    // string hardware_model = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCheckRequest, _impl_.hardware_model_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 device_id = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateCheckRequest, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string current_version = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateCheckRequest, _impl_.current_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string hardware_model = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateCheckRequest, _impl_.hardware_model_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(UpdateCheckRequest, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\26\0\17\16\0\0\0\0"
    "ota.UpdateCheckRequest"
    "current_version"
    "hardware_model"
  }},
};

::uint8_t* UpdateCheckRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ota.UpdateCheckRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 device_id = 1;
  if (this->_internal_device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_device_id(), target);
  }

  // string current_version = 2;
  if (!this->_internal_current_version().empty()) {
    const std::string& _s = this->_internal_current_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ota.UpdateCheckRequest.current_version");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string hardware_model = 3;
  if (!this->_internal_hardware_model().empty()) {
    const std::string& _s = this->_internal_hardware_model();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ota.UpdateCheckRequest.hardware_model");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int64 timestamp = 4;
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ota.UpdateCheckRequest)
  return target;
}

::size_t UpdateCheckRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ota.UpdateCheckRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string current_version = 2;
  if (!this->_internal_current_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_current_version());
  }

  // string hardware_model = 3;
  if (!this->_internal_hardware_model().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_hardware_model());
  }

  // int64 timestamp = 4;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  // int32 device_id = 1;
  if (this->_internal_device_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_device_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UpdateCheckRequest::_class_data_ = {
    UpdateCheckRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UpdateCheckRequest::GetClassData() const {
  return &_class_data_;
}

void UpdateCheckRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UpdateCheckRequest*>(&to_msg);
  auto& from = static_cast<const UpdateCheckRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ota.UpdateCheckRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_current_version().empty()) {
    _this->_internal_set_current_version(from._internal_current_version());
  }
  if (!from._internal_hardware_model().empty()) {
    _this->_internal_set_hardware_model(from._internal_hardware_model());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_device_id() != 0) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateCheckRequest::CopyFrom(const UpdateCheckRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ota.UpdateCheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateCheckRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UpdateCheckRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UpdateCheckRequest::InternalSwap(UpdateCheckRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.current_version_, &other->_impl_.current_version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hardware_model_, &other->_impl_.hardware_model_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateCheckRequest, _impl_.device_id_)
      + sizeof(UpdateCheckRequest::_impl_.device_id_)
      - PROTOBUF_FIELD_OFFSET(UpdateCheckRequest, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata UpdateCheckRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ota_5fservice_2eproto_getter, &descriptor_table_ota_5fservice_2eproto_once,
      file_level_metadata_ota_5fservice_2eproto[0]);
}
// ===================================================================

class UpdateCheckResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateCheckResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UpdateCheckResponse, _impl_._has_bits_);
  static const ::ota::FirmwareInfo& firmware_info(const UpdateCheckResponse* msg);
  static void set_has_firmware_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ota::FirmwareInfo& UpdateCheckResponse::_Internal::firmware_info(const UpdateCheckResponse* msg) {
  return *msg->_impl_.firmware_info_;
}
UpdateCheckResponse::UpdateCheckResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ota.UpdateCheckResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateCheckResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateCheckResponse::UpdateCheckResponse(
    ::google::protobuf::Arena* arena,
    const UpdateCheckResponse& from)
    : ::google::protobuf::Message(arena) {
  UpdateCheckResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.firmware_info_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::ota::FirmwareInfo>(arena, *from._impl_.firmware_info_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, update_available_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::update_available_));

  // @@protoc_insertion_point(copy_constructor:ota.UpdateCheckResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateCheckResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateCheckResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, firmware_info_),
           0,
           offsetof(Impl_, update_available_) -
               offsetof(Impl_, firmware_info_) +
               sizeof(Impl_::update_available_));
}
UpdateCheckResponse::~UpdateCheckResponse() {
  // @@protoc_insertion_point(destructor:ota.UpdateCheckResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateCheckResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.firmware_info_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UpdateCheckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ota.UpdateCheckResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.firmware_info_ != nullptr);
    _impl_.firmware_info_->Clear();
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.update_available_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.update_available_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateCheckResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> UpdateCheckResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateCheckResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UpdateCheckResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool update_available = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UpdateCheckResponse, _impl_.update_available_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCheckResponse, _impl_.update_available_)}},
    // .ota.FirmwareInfo firmware_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateCheckResponse, _impl_.firmware_info_)}},
    // int64 timestamp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UpdateCheckResponse, _impl_.timestamp_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCheckResponse, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool update_available = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateCheckResponse, _impl_.update_available_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .ota.FirmwareInfo firmware_info = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateCheckResponse, _impl_.firmware_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateCheckResponse, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ota::FirmwareInfo>()},
  }}, {{
  }},
};

::uint8_t* UpdateCheckResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ota.UpdateCheckResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool update_available = 1;
  if (this->_internal_update_available() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_update_available(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .ota.FirmwareInfo firmware_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::firmware_info(this),
        _Internal::firmware_info(this).GetCachedSize(), target, stream);
  }

  // int64 timestamp = 3;
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ota.UpdateCheckResponse)
  return target;
}

::size_t UpdateCheckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ota.UpdateCheckResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ota.FirmwareInfo firmware_info = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.firmware_info_);
  }

  // int64 timestamp = 3;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  // bool update_available = 1;
  if (this->_internal_update_available() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UpdateCheckResponse::_class_data_ = {
    UpdateCheckResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UpdateCheckResponse::GetClassData() const {
  return &_class_data_;
}

void UpdateCheckResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UpdateCheckResponse*>(&to_msg);
  auto& from = static_cast<const UpdateCheckResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ota.UpdateCheckResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_firmware_info()->::ota::FirmwareInfo::MergeFrom(
        from._internal_firmware_info());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_update_available() != 0) {
    _this->_internal_set_update_available(from._internal_update_available());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateCheckResponse::CopyFrom(const UpdateCheckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ota.UpdateCheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateCheckResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UpdateCheckResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UpdateCheckResponse::InternalSwap(UpdateCheckResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateCheckResponse, _impl_.update_available_)
      + sizeof(UpdateCheckResponse::_impl_.update_available_)
      - PROTOBUF_FIELD_OFFSET(UpdateCheckResponse, _impl_.firmware_info_)>(
          reinterpret_cast<char*>(&_impl_.firmware_info_),
          reinterpret_cast<char*>(&other->_impl_.firmware_info_));
}

::google::protobuf::Metadata UpdateCheckResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ota_5fservice_2eproto_getter, &descriptor_table_ota_5fservice_2eproto_once,
      file_level_metadata_ota_5fservice_2eproto[1]);
}
// ===================================================================

class FirmwareInfo::_Internal {
 public:
};

FirmwareInfo::FirmwareInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ota.FirmwareInfo)
}
inline PROTOBUF_NDEBUG_INLINE FirmwareInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : version_(arena, from.version_),
        filename_(arena, from.filename_),
        checksum_(arena, from.checksum_),
        release_notes_(arena, from.release_notes_),
        _cached_size_{0} {}

FirmwareInfo::FirmwareInfo(
    ::google::protobuf::Arena* arena,
    const FirmwareInfo& from)
    : ::google::protobuf::Message(arena) {
  FirmwareInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, file_size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, file_size_),
           offsetof(Impl_, is_critical_) -
               offsetof(Impl_, file_size_) +
               sizeof(Impl_::is_critical_));

  // @@protoc_insertion_point(copy_constructor:ota.FirmwareInfo)
}
inline PROTOBUF_NDEBUG_INLINE FirmwareInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : version_(arena),
        filename_(arena),
        checksum_(arena),
        release_notes_(arena),
        _cached_size_{0} {}

inline void FirmwareInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, file_size_),
           0,
           offsetof(Impl_, is_critical_) -
               offsetof(Impl_, file_size_) +
               sizeof(Impl_::is_critical_));
}
FirmwareInfo::~FirmwareInfo() {
  // @@protoc_insertion_point(destructor:ota.FirmwareInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FirmwareInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.version_.Destroy();
  _impl_.filename_.Destroy();
  _impl_.checksum_.Destroy();
  _impl_.release_notes_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FirmwareInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ota.FirmwareInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.version_.ClearToEmpty();
  _impl_.filename_.ClearToEmpty();
  _impl_.checksum_.ClearToEmpty();
  _impl_.release_notes_.ClearToEmpty();
  ::memset(&_impl_.file_size_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_critical_) -
      reinterpret_cast<char*>(&_impl_.file_size_)) + sizeof(_impl_.is_critical_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FirmwareInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 61, 2> FirmwareInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FirmwareInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string version = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FirmwareInfo, _impl_.version_)}},
    // string filename = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FirmwareInfo, _impl_.filename_)}},
    // int64 file_size = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FirmwareInfo, _impl_.file_size_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(FirmwareInfo, _impl_.file_size_)}},
    // string checksum = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(FirmwareInfo, _impl_.checksum_)}},
    // string release_notes = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(FirmwareInfo, _impl_.release_notes_)}},
    // bool is_critical = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FirmwareInfo, _impl_.is_critical_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(FirmwareInfo, _impl_.is_critical_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string version = 1;
    {PROTOBUF_FIELD_OFFSET(FirmwareInfo, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string filename = 2;
    {PROTOBUF_FIELD_OFFSET(FirmwareInfo, _impl_.filename_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 file_size = 3;
    {PROTOBUF_FIELD_OFFSET(FirmwareInfo, _impl_.file_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string checksum = 4;
    {PROTOBUF_FIELD_OFFSET(FirmwareInfo, _impl_.checksum_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string release_notes = 5;
    {PROTOBUF_FIELD_OFFSET(FirmwareInfo, _impl_.release_notes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_critical = 6;
    {PROTOBUF_FIELD_OFFSET(FirmwareInfo, _impl_.is_critical_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\20\7\10\0\10\15\0\0"
    "ota.FirmwareInfo"
    "version"
    "filename"
    "checksum"
    "release_notes"
  }},
};

::uint8_t* FirmwareInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ota.FirmwareInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string version = 1;
  if (!this->_internal_version().empty()) {
    const std::string& _s = this->_internal_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ota.FirmwareInfo.version");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string filename = 2;
  if (!this->_internal_filename().empty()) {
    const std::string& _s = this->_internal_filename();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ota.FirmwareInfo.filename");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int64 file_size = 3;
  if (this->_internal_file_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_file_size(), target);
  }

  // string checksum = 4;
  if (!this->_internal_checksum().empty()) {
    const std::string& _s = this->_internal_checksum();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ota.FirmwareInfo.checksum");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string release_notes = 5;
  if (!this->_internal_release_notes().empty()) {
    const std::string& _s = this->_internal_release_notes();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ota.FirmwareInfo.release_notes");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // bool is_critical = 6;
  if (this->_internal_is_critical() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_is_critical(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ota.FirmwareInfo)
  return target;
}

::size_t FirmwareInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ota.FirmwareInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version = 1;
  if (!this->_internal_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_version());
  }

  // string filename = 2;
  if (!this->_internal_filename().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_filename());
  }

  // string checksum = 4;
  if (!this->_internal_checksum().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_checksum());
  }

  // string release_notes = 5;
  if (!this->_internal_release_notes().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_release_notes());
  }

  // int64 file_size = 3;
  if (this->_internal_file_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_file_size());
  }

  // bool is_critical = 6;
  if (this->_internal_is_critical() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FirmwareInfo::_class_data_ = {
    FirmwareInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FirmwareInfo::GetClassData() const {
  return &_class_data_;
}

void FirmwareInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FirmwareInfo*>(&to_msg);
  auto& from = static_cast<const FirmwareInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ota.FirmwareInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_filename().empty()) {
    _this->_internal_set_filename(from._internal_filename());
  }
  if (!from._internal_checksum().empty()) {
    _this->_internal_set_checksum(from._internal_checksum());
  }
  if (!from._internal_release_notes().empty()) {
    _this->_internal_set_release_notes(from._internal_release_notes());
  }
  if (from._internal_file_size() != 0) {
    _this->_internal_set_file_size(from._internal_file_size());
  }
  if (from._internal_is_critical() != 0) {
    _this->_internal_set_is_critical(from._internal_is_critical());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FirmwareInfo::CopyFrom(const FirmwareInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ota.FirmwareInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FirmwareInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FirmwareInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FirmwareInfo::InternalSwap(FirmwareInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filename_, &other->_impl_.filename_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.checksum_, &other->_impl_.checksum_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.release_notes_, &other->_impl_.release_notes_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FirmwareInfo, _impl_.is_critical_)
      + sizeof(FirmwareInfo::_impl_.is_critical_)
      - PROTOBUF_FIELD_OFFSET(FirmwareInfo, _impl_.file_size_)>(
          reinterpret_cast<char*>(&_impl_.file_size_),
          reinterpret_cast<char*>(&other->_impl_.file_size_));
}

::google::protobuf::Metadata FirmwareInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ota_5fservice_2eproto_getter, &descriptor_table_ota_5fservice_2eproto_once,
      file_level_metadata_ota_5fservice_2eproto[2]);
}
// ===================================================================

class DownloadRequest::_Internal {
 public:
};

DownloadRequest::DownloadRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ota.DownloadRequest)
}
inline PROTOBUF_NDEBUG_INLINE DownloadRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : firmware_version_(arena, from.firmware_version_),
        _cached_size_{0} {}

DownloadRequest::DownloadRequest(
    ::google::protobuf::Arena* arena,
    const DownloadRequest& from)
    : ::google::protobuf::Message(arena) {
  DownloadRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, device_id_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::device_id_));

  // @@protoc_insertion_point(copy_constructor:ota.DownloadRequest)
}
inline PROTOBUF_NDEBUG_INLINE DownloadRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : firmware_version_(arena),
        _cached_size_{0} {}

inline void DownloadRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, device_id_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::device_id_));
}
DownloadRequest::~DownloadRequest() {
  // @@protoc_insertion_point(destructor:ota.DownloadRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DownloadRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.firmware_version_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DownloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ota.DownloadRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.firmware_version_.ClearToEmpty();
  ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.device_id_) -
      reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.device_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DownloadRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 44, 2> DownloadRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DownloadRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 device_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DownloadRequest, _impl_.device_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DownloadRequest, _impl_.device_id_)}},
    // string firmware_version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DownloadRequest, _impl_.firmware_version_)}},
    // int64 offset = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DownloadRequest, _impl_.offset_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DownloadRequest, _impl_.offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 device_id = 1;
    {PROTOBUF_FIELD_OFFSET(DownloadRequest, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string firmware_version = 2;
    {PROTOBUF_FIELD_OFFSET(DownloadRequest, _impl_.firmware_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 offset = 3;
    {PROTOBUF_FIELD_OFFSET(DownloadRequest, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\23\0\20\0\0\0\0\0"
    "ota.DownloadRequest"
    "firmware_version"
  }},
};

::uint8_t* DownloadRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ota.DownloadRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 device_id = 1;
  if (this->_internal_device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_device_id(), target);
  }

  // string firmware_version = 2;
  if (!this->_internal_firmware_version().empty()) {
    const std::string& _s = this->_internal_firmware_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ota.DownloadRequest.firmware_version");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int64 offset = 3;
  if (this->_internal_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_offset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ota.DownloadRequest)
  return target;
}

::size_t DownloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ota.DownloadRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string firmware_version = 2;
  if (!this->_internal_firmware_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_firmware_version());
  }

  // int64 offset = 3;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_offset());
  }

  // int32 device_id = 1;
  if (this->_internal_device_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_device_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DownloadRequest::_class_data_ = {
    DownloadRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DownloadRequest::GetClassData() const {
  return &_class_data_;
}

void DownloadRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DownloadRequest*>(&to_msg);
  auto& from = static_cast<const DownloadRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ota.DownloadRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_firmware_version().empty()) {
    _this->_internal_set_firmware_version(from._internal_firmware_version());
  }
  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  if (from._internal_device_id() != 0) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadRequest::CopyFrom(const DownloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ota.DownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DownloadRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DownloadRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DownloadRequest::InternalSwap(DownloadRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.firmware_version_, &other->_impl_.firmware_version_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DownloadRequest, _impl_.device_id_)
      + sizeof(DownloadRequest::_impl_.device_id_)
      - PROTOBUF_FIELD_OFFSET(DownloadRequest, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata DownloadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ota_5fservice_2eproto_getter, &descriptor_table_ota_5fservice_2eproto_once,
      file_level_metadata_ota_5fservice_2eproto[3]);
}
// ===================================================================

class DownloadResponse::_Internal {
 public:
};

DownloadResponse::DownloadResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ota.DownloadResponse)
}
inline PROTOBUF_NDEBUG_INLINE DownloadResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_(arena, from.data_),
        _cached_size_{0} {}

DownloadResponse::DownloadResponse(
    ::google::protobuf::Arena* arena,
    const DownloadResponse& from)
    : ::google::protobuf::Message(arena) {
  DownloadResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, is_last_chunk_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::is_last_chunk_));

  // @@protoc_insertion_point(copy_constructor:ota.DownloadResponse)
}
inline PROTOBUF_NDEBUG_INLINE DownloadResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void DownloadResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, is_last_chunk_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::is_last_chunk_));
}
DownloadResponse::~DownloadResponse() {
  // @@protoc_insertion_point(destructor:ota.DownloadResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DownloadResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DownloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ota.DownloadResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_last_chunk_) -
      reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.is_last_chunk_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DownloadResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> DownloadResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DownloadResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool is_last_chunk = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DownloadResponse, _impl_.is_last_chunk_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_.is_last_chunk_)}},
    // bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_.data_)}},
    // int64 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DownloadResponse, _impl_.offset_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_.offset_)}},
    // int64 total_size = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DownloadResponse, _impl_.total_size_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_.total_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 offset = 2;
    {PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 total_size = 3;
    {PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_.total_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool is_last_chunk = 4;
    {PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_.is_last_chunk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* DownloadResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ota.DownloadResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // int64 offset = 2;
  if (this->_internal_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_offset(), target);
  }

  // int64 total_size = 3;
  if (this->_internal_total_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_total_size(), target);
  }

  // bool is_last_chunk = 4;
  if (this->_internal_is_last_chunk() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_is_last_chunk(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ota.DownloadResponse)
  return target;
}

::size_t DownloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ota.DownloadResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // int64 offset = 2;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_offset());
  }

  // int64 total_size = 3;
  if (this->_internal_total_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_total_size());
  }

  // bool is_last_chunk = 4;
  if (this->_internal_is_last_chunk() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DownloadResponse::_class_data_ = {
    DownloadResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DownloadResponse::GetClassData() const {
  return &_class_data_;
}

void DownloadResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DownloadResponse*>(&to_msg);
  auto& from = static_cast<const DownloadResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ota.DownloadResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  if (from._internal_total_size() != 0) {
    _this->_internal_set_total_size(from._internal_total_size());
  }
  if (from._internal_is_last_chunk() != 0) {
    _this->_internal_set_is_last_chunk(from._internal_is_last_chunk());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DownloadResponse::CopyFrom(const DownloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ota.DownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DownloadResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DownloadResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DownloadResponse::InternalSwap(DownloadResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_.is_last_chunk_)
      + sizeof(DownloadResponse::_impl_.is_last_chunk_)
      - PROTOBUF_FIELD_OFFSET(DownloadResponse, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata DownloadResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ota_5fservice_2eproto_getter, &descriptor_table_ota_5fservice_2eproto_once,
      file_level_metadata_ota_5fservice_2eproto[4]);
}
// ===================================================================

class UpdateStatusRequest::_Internal {
 public:
};

UpdateStatusRequest::UpdateStatusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ota.UpdateStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : firmware_version_(arena, from.firmware_version_),
        error_message_(arena, from.error_message_),
        _cached_size_{0} {}

UpdateStatusRequest::UpdateStatusRequest(
    ::google::protobuf::Arena* arena,
    const UpdateStatusRequest& from)
    : ::google::protobuf::Message(arena) {
  UpdateStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, device_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, device_id_),
           offsetof(Impl_, progress_percentage_) -
               offsetof(Impl_, device_id_) +
               sizeof(Impl_::progress_percentage_));

  // @@protoc_insertion_point(copy_constructor:ota.UpdateStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : firmware_version_(arena),
        error_message_(arena),
        _cached_size_{0} {}

inline void UpdateStatusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, device_id_),
           0,
           offsetof(Impl_, progress_percentage_) -
               offsetof(Impl_, device_id_) +
               sizeof(Impl_::progress_percentage_));
}
UpdateStatusRequest::~UpdateStatusRequest() {
  // @@protoc_insertion_point(destructor:ota.UpdateStatusRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateStatusRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.firmware_version_.Destroy();
  _impl_.error_message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UpdateStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ota.UpdateStatusRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.firmware_version_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  ::memset(&_impl_.device_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.progress_percentage_) -
      reinterpret_cast<char*>(&_impl_.device_id_)) + sizeof(_impl_.progress_percentage_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateStatusRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 61, 2> UpdateStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UpdateStatusRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 device_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateStatusRequest, _impl_.device_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.device_id_)}},
    // string firmware_version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.firmware_version_)}},
    // .ota.UpdateStatus status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateStatusRequest, _impl_.status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.status_)}},
    // string error_message = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.error_message_)}},
    // int32 progress_percentage = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateStatusRequest, _impl_.progress_percentage_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.progress_percentage_)}},
    // int64 timestamp = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UpdateStatusRequest, _impl_.timestamp_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 device_id = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string firmware_version = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.firmware_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ota.UpdateStatus status = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string error_message = 4;
    {PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 progress_percentage = 5;
    {PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.progress_percentage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\27\0\20\0\15\0\0\0"
    "ota.UpdateStatusRequest"
    "firmware_version"
    "error_message"
  }},
};

::uint8_t* UpdateStatusRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ota.UpdateStatusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 device_id = 1;
  if (this->_internal_device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_device_id(), target);
  }

  // string firmware_version = 2;
  if (!this->_internal_firmware_version().empty()) {
    const std::string& _s = this->_internal_firmware_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ota.UpdateStatusRequest.firmware_version");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .ota.UpdateStatus status = 3;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_status(), target);
  }

  // string error_message = 4;
  if (!this->_internal_error_message().empty()) {
    const std::string& _s = this->_internal_error_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ota.UpdateStatusRequest.error_message");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int32 progress_percentage = 5;
  if (this->_internal_progress_percentage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_progress_percentage(), target);
  }

  // int64 timestamp = 6;
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<6>(
            stream, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ota.UpdateStatusRequest)
  return target;
}

::size_t UpdateStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ota.UpdateStatusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string firmware_version = 2;
  if (!this->_internal_firmware_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_firmware_version());
  }

  // string error_message = 4;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_error_message());
  }

  // int32 device_id = 1;
  if (this->_internal_device_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_device_id());
  }

  // .ota.UpdateStatus status = 3;
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  // int64 timestamp = 6;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  // int32 progress_percentage = 5;
  if (this->_internal_progress_percentage() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_progress_percentage());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UpdateStatusRequest::_class_data_ = {
    UpdateStatusRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UpdateStatusRequest::GetClassData() const {
  return &_class_data_;
}

void UpdateStatusRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UpdateStatusRequest*>(&to_msg);
  auto& from = static_cast<const UpdateStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ota.UpdateStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_firmware_version().empty()) {
    _this->_internal_set_firmware_version(from._internal_firmware_version());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_device_id() != 0) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_progress_percentage() != 0) {
    _this->_internal_set_progress_percentage(from._internal_progress_percentage());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateStatusRequest::CopyFrom(const UpdateStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ota.UpdateStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateStatusRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UpdateStatusRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UpdateStatusRequest::InternalSwap(UpdateStatusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.firmware_version_, &other->_impl_.firmware_version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.progress_percentage_)
      + sizeof(UpdateStatusRequest::_impl_.progress_percentage_)
      - PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.device_id_)>(
          reinterpret_cast<char*>(&_impl_.device_id_),
          reinterpret_cast<char*>(&other->_impl_.device_id_));
}

::google::protobuf::Metadata UpdateStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ota_5fservice_2eproto_getter, &descriptor_table_ota_5fservice_2eproto_once,
      file_level_metadata_ota_5fservice_2eproto[5]);
}
// ===================================================================

class UpdateStatusResponse::_Internal {
 public:
};

UpdateStatusResponse::UpdateStatusResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ota.UpdateStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        _cached_size_{0} {}

UpdateStatusResponse::UpdateStatusResponse(
    ::google::protobuf::Arena* arena,
    const UpdateStatusResponse& from)
    : ::google::protobuf::Message(arena) {
  UpdateStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, acknowledged_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::acknowledged_));

  // @@protoc_insertion_point(copy_constructor:ota.UpdateStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void UpdateStatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, acknowledged_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::acknowledged_));
}
UpdateStatusResponse::~UpdateStatusResponse() {
  // @@protoc_insertion_point(destructor:ota.UpdateStatusResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateStatusResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UpdateStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ota.UpdateStatusResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.acknowledged_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.acknowledged_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateStatusResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 40, 2> UpdateStatusResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UpdateStatusResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool acknowledged = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UpdateStatusResponse, _impl_.acknowledged_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_.acknowledged_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_.message_)}},
    // int64 timestamp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UpdateStatusResponse, _impl_.timestamp_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool acknowledged = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_.acknowledged_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\30\0\7\0\0\0\0\0"
    "ota.UpdateStatusResponse"
    "message"
  }},
};

::uint8_t* UpdateStatusResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ota.UpdateStatusResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool acknowledged = 1;
  if (this->_internal_acknowledged() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_acknowledged(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ota.UpdateStatusResponse.message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int64 timestamp = 3;
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ota.UpdateStatusResponse)
  return target;
}

::size_t UpdateStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ota.UpdateStatusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // int64 timestamp = 3;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  // bool acknowledged = 1;
  if (this->_internal_acknowledged() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UpdateStatusResponse::_class_data_ = {
    UpdateStatusResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UpdateStatusResponse::GetClassData() const {
  return &_class_data_;
}

void UpdateStatusResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UpdateStatusResponse*>(&to_msg);
  auto& from = static_cast<const UpdateStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ota.UpdateStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_acknowledged() != 0) {
    _this->_internal_set_acknowledged(from._internal_acknowledged());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateStatusResponse::CopyFrom(const UpdateStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ota.UpdateStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateStatusResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UpdateStatusResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UpdateStatusResponse::InternalSwap(UpdateStatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_.acknowledged_)
      + sizeof(UpdateStatusResponse::_impl_.acknowledged_)
      - PROTOBUF_FIELD_OFFSET(UpdateStatusResponse, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata UpdateStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ota_5fservice_2eproto_getter, &descriptor_table_ota_5fservice_2eproto_once,
      file_level_metadata_ota_5fservice_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ota
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
