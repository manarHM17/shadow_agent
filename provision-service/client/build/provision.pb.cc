// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provision.proto

#include "provision.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace shadow_agent {

inline constexpr UpdateDeviceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hostname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        os_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        current_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateDeviceRequest::UpdateDeviceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateDeviceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDeviceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDeviceRequestDefaultTypeInternal() {}
  union {
    UpdateDeviceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDeviceRequestDefaultTypeInternal _UpdateDeviceRequest_default_instance_;

inline constexpr Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Response::Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseDefaultTypeInternal() {}
  union {
    Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseDefaultTypeInternal _Response_default_instance_;

inline constexpr RegisterDeviceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterDeviceResponse::RegisterDeviceResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RegisterDeviceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterDeviceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterDeviceResponseDefaultTypeInternal() {}
  union {
    RegisterDeviceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterDeviceResponseDefaultTypeInternal _RegisterDeviceResponse_default_instance_;

inline constexpr ListDeviceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListDeviceRequest::ListDeviceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListDeviceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListDeviceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListDeviceRequestDefaultTypeInternal() {}
  union {
    ListDeviceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListDeviceRequestDefaultTypeInternal _ListDeviceRequest_default_instance_;

inline constexpr DeviceInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hostname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        os_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        current_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceInfo::DeviceInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceInfoDefaultTypeInternal() {}
  union {
    DeviceInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceInfoDefaultTypeInternal _DeviceInfo_default_instance_;

inline constexpr DeviceId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceId::DeviceId(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceIdDefaultTypeInternal() {}
  union {
    DeviceId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceIdDefaultTypeInternal _DeviceId_default_instance_;

inline constexpr DeviceList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : devices_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceList::DeviceList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceListDefaultTypeInternal() {}
  union {
    DeviceList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceListDefaultTypeInternal _DeviceList_default_instance_;
}  // namespace shadow_agent
static ::_pb::Metadata file_level_metadata_provision_2eproto[7];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_provision_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_provision_2eproto = nullptr;
const ::uint32_t TableStruct_provision_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::shadow_agent::DeviceInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::shadow_agent::DeviceInfo, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::shadow_agent::DeviceInfo, _impl_.hostname_),
    PROTOBUF_FIELD_OFFSET(::shadow_agent::DeviceInfo, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::shadow_agent::DeviceInfo, _impl_.os_type_),
    PROTOBUF_FIELD_OFFSET(::shadow_agent::DeviceInfo, _impl_.username_),
    PROTOBUF_FIELD_OFFSET(::shadow_agent::DeviceInfo, _impl_.current_time_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::shadow_agent::RegisterDeviceResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::shadow_agent::RegisterDeviceResponse, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::shadow_agent::RegisterDeviceResponse, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::shadow_agent::RegisterDeviceResponse, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::shadow_agent::RegisterDeviceResponse, _impl_.token_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::shadow_agent::UpdateDeviceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::shadow_agent::UpdateDeviceRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::shadow_agent::UpdateDeviceRequest, _impl_.hostname_),
    PROTOBUF_FIELD_OFFSET(::shadow_agent::UpdateDeviceRequest, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::shadow_agent::UpdateDeviceRequest, _impl_.os_type_),
    PROTOBUF_FIELD_OFFSET(::shadow_agent::UpdateDeviceRequest, _impl_.username_),
    PROTOBUF_FIELD_OFFSET(::shadow_agent::UpdateDeviceRequest, _impl_.current_time_),
    PROTOBUF_FIELD_OFFSET(::shadow_agent::UpdateDeviceRequest, _impl_.token_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::shadow_agent::DeviceId, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::shadow_agent::DeviceId, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::shadow_agent::DeviceId, _impl_.token_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::shadow_agent::Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::shadow_agent::Response, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::shadow_agent::Response, _impl_.message_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::shadow_agent::ListDeviceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::shadow_agent::ListDeviceRequest, _impl_.token_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::shadow_agent::DeviceList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::shadow_agent::DeviceList, _impl_.devices_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::shadow_agent::DeviceInfo)},
        {14, -1, -1, sizeof(::shadow_agent::RegisterDeviceResponse)},
        {26, -1, -1, sizeof(::shadow_agent::UpdateDeviceRequest)},
        {41, -1, -1, sizeof(::shadow_agent::DeviceId)},
        {51, -1, -1, sizeof(::shadow_agent::Response)},
        {61, -1, -1, sizeof(::shadow_agent::ListDeviceRequest)},
        {70, -1, -1, sizeof(::shadow_agent::DeviceList)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::shadow_agent::_DeviceInfo_default_instance_._instance,
    &::shadow_agent::_RegisterDeviceResponse_default_instance_._instance,
    &::shadow_agent::_UpdateDeviceRequest_default_instance_._instance,
    &::shadow_agent::_DeviceId_default_instance_._instance,
    &::shadow_agent::_Response_default_instance_._instance,
    &::shadow_agent::_ListDeviceRequest_default_instance_._instance,
    &::shadow_agent::_DeviceList_default_instance_._instance,
};
const char descriptor_table_protodef_provision_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\017provision.proto\022\014shadow_agent\"q\n\nDevic"
    "eInfo\022\n\n\002id\030\001 \001(\005\022\020\n\010hostname\030\002 \001(\t\022\014\n\004t"
    "ype\030\003 \001(\t\022\017\n\007os_type\030\004 \001(\t\022\020\n\010username\030\005"
    " \001(\t\022\024\n\014current_time\030\006 \001(\t\"U\n\026RegisterDe"
    "viceResponse\022\017\n\007success\030\001 \001(\010\022\017\n\007message"
    "\030\002 \001(\t\022\n\n\002id\030\003 \001(\005\022\r\n\005token\030\004 \001(\t\"\211\001\n\023Up"
    "dateDeviceRequest\022\n\n\002id\030\001 \001(\005\022\020\n\010hostnam"
    "e\030\002 \001(\t\022\014\n\004type\030\003 \001(\t\022\017\n\007os_type\030\004 \001(\t\022\020"
    "\n\010username\030\005 \001(\t\022\024\n\014current_time\030\006 \001(\t\022\r"
    "\n\005token\030\007 \001(\t\"%\n\010DeviceId\022\n\n\002id\030\001 \001(\005\022\r\n"
    "\005token\030\002 \001(\t\",\n\010Response\022\017\n\007success\030\001 \001("
    "\010\022\017\n\007message\030\002 \001(\t\"\"\n\021ListDeviceRequest\022"
    "\r\n\005token\030\001 \001(\t\"7\n\nDeviceList\022)\n\007devices\030"
    "\001 \003(\0132\030.shadow_agent.DeviceInfo2\370\002\n\020Prov"
    "isionService\022P\n\016RegisterDevice\022\030.shadow_"
    "agent.DeviceInfo\032$.shadow_agent.Register"
    "DeviceResponse\022I\n\014UpdateDevice\022!.shadow_"
    "agent.UpdateDeviceRequest\032\026.shadow_agent"
    ".Response\022>\n\014DeleteDevice\022\026.shadow_agent"
    ".DeviceId\032\026.shadow_agent.Response\022H\n\013Lis"
    "tDevices\022\037.shadow_agent.ListDeviceReques"
    "t\032\030.shadow_agent.DeviceList\022=\n\tGetDevice"
    "\022\026.shadow_agent.DeviceId\032\030.shadow_agent."
    "DeviceInfob\006proto3"
};
static ::absl::once_flag descriptor_table_provision_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_provision_2eproto = {
    false,
    false,
    938,
    descriptor_table_protodef_provision_2eproto,
    "provision.proto",
    &descriptor_table_provision_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_provision_2eproto::offsets,
    file_level_metadata_provision_2eproto,
    file_level_enum_descriptors_provision_2eproto,
    file_level_service_descriptors_provision_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_provision_2eproto_getter() {
  return &descriptor_table_provision_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_provision_2eproto(&descriptor_table_provision_2eproto);
namespace shadow_agent {
// ===================================================================

class DeviceInfo::_Internal {
 public:
};

DeviceInfo::DeviceInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shadow_agent.DeviceInfo)
}
inline PROTOBUF_NDEBUG_INLINE DeviceInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : hostname_(arena, from.hostname_),
        type_(arena, from.type_),
        os_type_(arena, from.os_type_),
        username_(arena, from.username_),
        current_time_(arena, from.current_time_),
        _cached_size_{0} {}

DeviceInfo::DeviceInfo(
    ::google::protobuf::Arena* arena,
    const DeviceInfo& from)
    : ::google::protobuf::Message(arena) {
  DeviceInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:shadow_agent.DeviceInfo)
}
inline PROTOBUF_NDEBUG_INLINE DeviceInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hostname_(arena),
        type_(arena),
        os_type_(arena),
        username_(arena),
        current_time_(arena),
        _cached_size_{0} {}

inline void DeviceInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
DeviceInfo::~DeviceInfo() {
  // @@protoc_insertion_point(destructor:shadow_agent.DeviceInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.hostname_.Destroy();
  _impl_.type_.Destroy();
  _impl_.os_type_.Destroy();
  _impl_.username_.Destroy();
  _impl_.current_time_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:shadow_agent.DeviceInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hostname_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.os_type_.ClearToEmpty();
  _impl_.username_.ClearToEmpty();
  _impl_.current_time_.ClearToEmpty();
  _impl_.id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 71, 2> DeviceInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceInfo, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.id_)}},
    // string hostname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.hostname_)}},
    // string type = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.type_)}},
    // string os_type = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.os_type_)}},
    // string username = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.username_)}},
    // string current_time = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.current_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string hostname = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.hostname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 3;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string os_type = 4;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.os_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string username = 5;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string current_time = 6;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.current_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\0\10\4\7\10\14\0"
    "shadow_agent.DeviceInfo"
    "hostname"
    "type"
    "os_type"
    "username"
    "current_time"
  }},
};

::uint8_t* DeviceInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:shadow_agent.DeviceInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string hostname = 2;
  if (!this->_internal_hostname().empty()) {
    const std::string& _s = this->_internal_hostname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shadow_agent.DeviceInfo.hostname");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string type = 3;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shadow_agent.DeviceInfo.type");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string os_type = 4;
  if (!this->_internal_os_type().empty()) {
    const std::string& _s = this->_internal_os_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shadow_agent.DeviceInfo.os_type");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string username = 5;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shadow_agent.DeviceInfo.username");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string current_time = 6;
  if (!this->_internal_current_time().empty()) {
    const std::string& _s = this->_internal_current_time();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shadow_agent.DeviceInfo.current_time");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shadow_agent.DeviceInfo)
  return target;
}

::size_t DeviceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shadow_agent.DeviceInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hostname = 2;
  if (!this->_internal_hostname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_hostname());
  }

  // string type = 3;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  // string os_type = 4;
  if (!this->_internal_os_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_os_type());
  }

  // string username = 5;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // string current_time = 6;
  if (!this->_internal_current_time().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_current_time());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceInfo::_class_data_ = {
    DeviceInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceInfo::GetClassData() const {
  return &_class_data_;
}

void DeviceInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceInfo*>(&to_msg);
  auto& from = static_cast<const DeviceInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:shadow_agent.DeviceInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hostname().empty()) {
    _this->_internal_set_hostname(from._internal_hostname());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_os_type().empty()) {
    _this->_internal_set_os_type(from._internal_os_type());
  }
  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_current_time().empty()) {
    _this->_internal_set_current_time(from._internal_current_time());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceInfo::CopyFrom(const DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shadow_agent.DeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceInfo::InternalSwap(DeviceInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hostname_, &other->_impl_.hostname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.os_type_, &other->_impl_.os_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.current_time_, &other->_impl_.current_time_, arena);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata DeviceInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provision_2eproto_getter, &descriptor_table_provision_2eproto_once,
      file_level_metadata_provision_2eproto[0]);
}
// ===================================================================

class RegisterDeviceResponse::_Internal {
 public:
};

RegisterDeviceResponse::RegisterDeviceResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shadow_agent.RegisterDeviceResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterDeviceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        token_(arena, from.token_),
        _cached_size_{0} {}

RegisterDeviceResponse::RegisterDeviceResponse(
    ::google::protobuf::Arena* arena,
    const RegisterDeviceResponse& from)
    : ::google::protobuf::Message(arena) {
  RegisterDeviceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, success_),
           offsetof(Impl_, id_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::id_));

  // @@protoc_insertion_point(copy_constructor:shadow_agent.RegisterDeviceResponse)
}
inline PROTOBUF_NDEBUG_INLINE RegisterDeviceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        token_(arena),
        _cached_size_{0} {}

inline void RegisterDeviceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::id_));
}
RegisterDeviceResponse::~RegisterDeviceResponse() {
  // @@protoc_insertion_point(destructor:shadow_agent.RegisterDeviceResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RegisterDeviceResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.token_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RegisterDeviceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:shadow_agent.RegisterDeviceResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.token_.ClearToEmpty();
  ::memset(&_impl_.success_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.id_) -
      reinterpret_cast<char*>(&_impl_.success_)) + sizeof(_impl_.id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RegisterDeviceResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 56, 2> RegisterDeviceResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RegisterDeviceResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string token = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.token_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RegisterDeviceResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.success_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.message_)}},
    // int32 id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterDeviceResponse, _impl_.id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 id = 3;
    {PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string token = 4;
    {PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\0\7\0\5\0\0\0"
    "shadow_agent.RegisterDeviceResponse"
    "message"
    "token"
  }},
};

::uint8_t* RegisterDeviceResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:shadow_agent.RegisterDeviceResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shadow_agent.RegisterDeviceResponse.message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 id = 3;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_id(), target);
  }

  // string token = 4;
  if (!this->_internal_token().empty()) {
    const std::string& _s = this->_internal_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shadow_agent.RegisterDeviceResponse.token");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shadow_agent.RegisterDeviceResponse)
  return target;
}

::size_t RegisterDeviceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shadow_agent.RegisterDeviceResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // string token = 4;
  if (!this->_internal_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_token());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  // int32 id = 3;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RegisterDeviceResponse::_class_data_ = {
    RegisterDeviceResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RegisterDeviceResponse::GetClassData() const {
  return &_class_data_;
}

void RegisterDeviceResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RegisterDeviceResponse*>(&to_msg);
  auto& from = static_cast<const RegisterDeviceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:shadow_agent.RegisterDeviceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterDeviceResponse::CopyFrom(const RegisterDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shadow_agent.RegisterDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RegisterDeviceResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RegisterDeviceResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RegisterDeviceResponse::InternalSwap(RegisterDeviceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.id_)
      + sizeof(RegisterDeviceResponse::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(RegisterDeviceResponse, _impl_.success_)>(
          reinterpret_cast<char*>(&_impl_.success_),
          reinterpret_cast<char*>(&other->_impl_.success_));
}

::google::protobuf::Metadata RegisterDeviceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provision_2eproto_getter, &descriptor_table_provision_2eproto_once,
      file_level_metadata_provision_2eproto[1]);
}
// ===================================================================

class UpdateDeviceRequest::_Internal {
 public:
};

UpdateDeviceRequest::UpdateDeviceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shadow_agent.UpdateDeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : hostname_(arena, from.hostname_),
        type_(arena, from.type_),
        os_type_(arena, from.os_type_),
        username_(arena, from.username_),
        current_time_(arena, from.current_time_),
        token_(arena, from.token_),
        _cached_size_{0} {}

UpdateDeviceRequest::UpdateDeviceRequest(
    ::google::protobuf::Arena* arena,
    const UpdateDeviceRequest& from)
    : ::google::protobuf::Message(arena) {
  UpdateDeviceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:shadow_agent.UpdateDeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hostname_(arena),
        type_(arena),
        os_type_(arena),
        username_(arena),
        current_time_(arena),
        token_(arena),
        _cached_size_{0} {}

inline void UpdateDeviceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
UpdateDeviceRequest::~UpdateDeviceRequest() {
  // @@protoc_insertion_point(destructor:shadow_agent.UpdateDeviceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateDeviceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.hostname_.Destroy();
  _impl_.type_.Destroy();
  _impl_.os_type_.Destroy();
  _impl_.username_.Destroy();
  _impl_.current_time_.Destroy();
  _impl_.token_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UpdateDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:shadow_agent.UpdateDeviceRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hostname_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.os_type_.ClearToEmpty();
  _impl_.username_.ClearToEmpty();
  _impl_.current_time_.ClearToEmpty();
  _impl_.token_.ClearToEmpty();
  _impl_.id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateDeviceRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 85, 2> UpdateDeviceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UpdateDeviceRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateDeviceRequest, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.id_)}},
    // string hostname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.hostname_)}},
    // string type = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.type_)}},
    // string os_type = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.os_type_)}},
    // string username = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.username_)}},
    // string current_time = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.current_time_)}},
    // string token = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string hostname = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.hostname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string os_type = 4;
    {PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.os_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string username = 5;
    {PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string current_time = 6;
    {PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.current_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string token = 7;
    {PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\0\10\4\7\10\14\5"
    "shadow_agent.UpdateDeviceRequest"
    "hostname"
    "type"
    "os_type"
    "username"
    "current_time"
    "token"
  }},
};

::uint8_t* UpdateDeviceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:shadow_agent.UpdateDeviceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string hostname = 2;
  if (!this->_internal_hostname().empty()) {
    const std::string& _s = this->_internal_hostname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shadow_agent.UpdateDeviceRequest.hostname");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string type = 3;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shadow_agent.UpdateDeviceRequest.type");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string os_type = 4;
  if (!this->_internal_os_type().empty()) {
    const std::string& _s = this->_internal_os_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shadow_agent.UpdateDeviceRequest.os_type");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string username = 5;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shadow_agent.UpdateDeviceRequest.username");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string current_time = 6;
  if (!this->_internal_current_time().empty()) {
    const std::string& _s = this->_internal_current_time();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shadow_agent.UpdateDeviceRequest.current_time");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string token = 7;
  if (!this->_internal_token().empty()) {
    const std::string& _s = this->_internal_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shadow_agent.UpdateDeviceRequest.token");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shadow_agent.UpdateDeviceRequest)
  return target;
}

::size_t UpdateDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shadow_agent.UpdateDeviceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hostname = 2;
  if (!this->_internal_hostname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_hostname());
  }

  // string type = 3;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  // string os_type = 4;
  if (!this->_internal_os_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_os_type());
  }

  // string username = 5;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // string current_time = 6;
  if (!this->_internal_current_time().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_current_time());
  }

  // string token = 7;
  if (!this->_internal_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_token());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UpdateDeviceRequest::_class_data_ = {
    UpdateDeviceRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UpdateDeviceRequest::GetClassData() const {
  return &_class_data_;
}

void UpdateDeviceRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UpdateDeviceRequest*>(&to_msg);
  auto& from = static_cast<const UpdateDeviceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:shadow_agent.UpdateDeviceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hostname().empty()) {
    _this->_internal_set_hostname(from._internal_hostname());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_os_type().empty()) {
    _this->_internal_set_os_type(from._internal_os_type());
  }
  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_current_time().empty()) {
    _this->_internal_set_current_time(from._internal_current_time());
  }
  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDeviceRequest::CopyFrom(const UpdateDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shadow_agent.UpdateDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateDeviceRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UpdateDeviceRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UpdateDeviceRequest::InternalSwap(UpdateDeviceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hostname_, &other->_impl_.hostname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.os_type_, &other->_impl_.os_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.current_time_, &other->_impl_.current_time_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata UpdateDeviceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provision_2eproto_getter, &descriptor_table_provision_2eproto_once,
      file_level_metadata_provision_2eproto[2]);
}
// ===================================================================

class DeviceId::_Internal {
 public:
};

DeviceId::DeviceId(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shadow_agent.DeviceId)
}
inline PROTOBUF_NDEBUG_INLINE DeviceId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : token_(arena, from.token_),
        _cached_size_{0} {}

DeviceId::DeviceId(
    ::google::protobuf::Arena* arena,
    const DeviceId& from)
    : ::google::protobuf::Message(arena) {
  DeviceId* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:shadow_agent.DeviceId)
}
inline PROTOBUF_NDEBUG_INLINE DeviceId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : token_(arena),
        _cached_size_{0} {}

inline void DeviceId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
DeviceId::~DeviceId() {
  // @@protoc_insertion_point(destructor:shadow_agent.DeviceId)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceId::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.token_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceId::Clear() {
// @@protoc_insertion_point(message_clear_start:shadow_agent.DeviceId)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _impl_.id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceId::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 35, 2> DeviceId::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceId_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceId, _impl_.token_)}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceId, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceId, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceId, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string token = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceId, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\0\5\0\0\0\0\0"
    "shadow_agent.DeviceId"
    "token"
  }},
};

::uint8_t* DeviceId::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:shadow_agent.DeviceId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string token = 2;
  if (!this->_internal_token().empty()) {
    const std::string& _s = this->_internal_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shadow_agent.DeviceId.token");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shadow_agent.DeviceId)
  return target;
}

::size_t DeviceId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shadow_agent.DeviceId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 2;
  if (!this->_internal_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_token());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceId::_class_data_ = {
    DeviceId::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceId::GetClassData() const {
  return &_class_data_;
}

void DeviceId::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceId*>(&to_msg);
  auto& from = static_cast<const DeviceId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:shadow_agent.DeviceId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceId::CopyFrom(const DeviceId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shadow_agent.DeviceId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceId::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceId::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceId::InternalSwap(DeviceId* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata DeviceId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provision_2eproto_getter, &descriptor_table_provision_2eproto_once,
      file_level_metadata_provision_2eproto[3]);
}
// ===================================================================

class Response::_Internal {
 public:
};

Response::Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shadow_agent.Response)
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        _cached_size_{0} {}

Response::Response(
    ::google::protobuf::Arena* arena,
    const Response& from)
    : ::google::protobuf::Message(arena) {
  Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:shadow_agent.Response)
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
Response::~Response() {
  // @@protoc_insertion_point(destructor:shadow_agent.Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:shadow_agent.Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 37, 2> Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Response, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\0\7\0\0\0\0\0"
    "shadow_agent.Response"
    "message"
  }},
};

::uint8_t* Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:shadow_agent.Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shadow_agent.Response.message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shadow_agent.Response)
  return target;
}

::size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shadow_agent.Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Response::_class_data_ = {
    Response::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Response::GetClassData() const {
  return &_class_data_;
}

void Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Response*>(&to_msg);
  auto& from = static_cast<const Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:shadow_agent.Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shadow_agent.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Response::InternalSwap(Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provision_2eproto_getter, &descriptor_table_provision_2eproto_once,
      file_level_metadata_provision_2eproto[4]);
}
// ===================================================================

class ListDeviceRequest::_Internal {
 public:
};

ListDeviceRequest::ListDeviceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shadow_agent.ListDeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : token_(arena, from.token_),
        _cached_size_{0} {}

ListDeviceRequest::ListDeviceRequest(
    ::google::protobuf::Arena* arena,
    const ListDeviceRequest& from)
    : ::google::protobuf::Message(arena) {
  ListDeviceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:shadow_agent.ListDeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : token_(arena),
        _cached_size_{0} {}

inline void ListDeviceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ListDeviceRequest::~ListDeviceRequest() {
  // @@protoc_insertion_point(destructor:shadow_agent.ListDeviceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListDeviceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.token_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:shadow_agent.ListDeviceRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListDeviceRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 44, 2> ListDeviceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ListDeviceRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string token = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListDeviceRequest, _impl_.token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string token = 1;
    {PROTOBUF_FIELD_OFFSET(ListDeviceRequest, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\5\0\0\0\0\0\0"
    "shadow_agent.ListDeviceRequest"
    "token"
  }},
};

::uint8_t* ListDeviceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:shadow_agent.ListDeviceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    const std::string& _s = this->_internal_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shadow_agent.ListDeviceRequest.token");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shadow_agent.ListDeviceRequest)
  return target;
}

::size_t ListDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shadow_agent.ListDeviceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListDeviceRequest::_class_data_ = {
    ListDeviceRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListDeviceRequest::GetClassData() const {
  return &_class_data_;
}

void ListDeviceRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListDeviceRequest*>(&to_msg);
  auto& from = static_cast<const ListDeviceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:shadow_agent.ListDeviceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListDeviceRequest::CopyFrom(const ListDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shadow_agent.ListDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListDeviceRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ListDeviceRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListDeviceRequest::InternalSwap(ListDeviceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
}

::google::protobuf::Metadata ListDeviceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provision_2eproto_getter, &descriptor_table_provision_2eproto_once,
      file_level_metadata_provision_2eproto[5]);
}
// ===================================================================

class DeviceList::_Internal {
 public:
};

DeviceList::DeviceList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shadow_agent.DeviceList)
}
inline PROTOBUF_NDEBUG_INLINE DeviceList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : devices_{visibility, arena, from.devices_},
        _cached_size_{0} {}

DeviceList::DeviceList(
    ::google::protobuf::Arena* arena,
    const DeviceList& from)
    : ::google::protobuf::Message(arena) {
  DeviceList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:shadow_agent.DeviceList)
}
inline PROTOBUF_NDEBUG_INLINE DeviceList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : devices_{visibility, arena},
        _cached_size_{0} {}

inline void DeviceList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeviceList::~DeviceList() {
  // @@protoc_insertion_point(destructor:shadow_agent.DeviceList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceList::Clear() {
// @@protoc_insertion_point(message_clear_start:shadow_agent.DeviceList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.devices_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> DeviceList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeviceList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .shadow_agent.DeviceInfo devices = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceList, _impl_.devices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .shadow_agent.DeviceInfo devices = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceList, _impl_.devices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::shadow_agent::DeviceInfo>()},
  }}, {{
  }},
};

::uint8_t* DeviceList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:shadow_agent.DeviceList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .shadow_agent.DeviceInfo devices = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_devices_size()); i < n; i++) {
    const auto& repfield = this->_internal_devices().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shadow_agent.DeviceList)
  return target;
}

::size_t DeviceList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shadow_agent.DeviceList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .shadow_agent.DeviceInfo devices = 1;
  total_size += 1UL * this->_internal_devices_size();
  for (const auto& msg : this->_internal_devices()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceList::_class_data_ = {
    DeviceList::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceList::GetClassData() const {
  return &_class_data_;
}

void DeviceList::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceList*>(&to_msg);
  auto& from = static_cast<const DeviceList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:shadow_agent.DeviceList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_devices()->MergeFrom(
      from._internal_devices());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceList::CopyFrom(const DeviceList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shadow_agent.DeviceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceList::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceList::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceList::InternalSwap(DeviceList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.devices_.InternalSwap(&other->_impl_.devices_);
}

::google::protobuf::Metadata DeviceList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provision_2eproto_getter, &descriptor_table_provision_2eproto_once,
      file_level_metadata_provision_2eproto[6]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace shadow_agent
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
