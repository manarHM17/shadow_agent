// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provisioning.proto

#include "provisioning.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace provisioning {

inline constexpr UpdateDeviceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateDeviceResponse::UpdateDeviceResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateDeviceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDeviceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDeviceResponseDefaultTypeInternal() {}
  union {
    UpdateDeviceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDeviceResponseDefaultTypeInternal _UpdateDeviceResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetDevicesRequest::GetDevicesRequest(::_pbi::ConstantInitialized) {}
struct GetDevicesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDevicesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDevicesRequestDefaultTypeInternal() {}
  union {
    GetDevicesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDevicesRequestDefaultTypeInternal _GetDevicesRequest_default_instance_;

inline constexpr GetDeviceByIdRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetDeviceByIdRequest::GetDeviceByIdRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetDeviceByIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDeviceByIdRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDeviceByIdRequestDefaultTypeInternal() {}
  union {
    GetDeviceByIdRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDeviceByIdRequestDefaultTypeInternal _GetDeviceByIdRequest_default_instance_;

inline constexpr DeviceInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hostname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        location_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hardware_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        os_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ip_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        serial_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        updated_at_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceInfo::DeviceInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceInfoDefaultTypeInternal() {}
  union {
    DeviceInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceInfoDefaultTypeInternal _DeviceInfo_default_instance_;

inline constexpr DeleteDeviceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteDeviceResponse::DeleteDeviceResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeleteDeviceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDeviceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDeviceResponseDefaultTypeInternal() {}
  union {
    DeleteDeviceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDeviceResponseDefaultTypeInternal _DeleteDeviceResponse_default_instance_;

inline constexpr DeleteDeviceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteDeviceRequest::DeleteDeviceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeleteDeviceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDeviceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDeviceRequestDefaultTypeInternal() {}
  union {
    DeleteDeviceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDeviceRequestDefaultTypeInternal _DeleteDeviceRequest_default_instance_;

inline constexpr AuthResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : jwt_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AuthResponse::AuthResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AuthResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthResponseDefaultTypeInternal() {}
  union {
    AuthResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthResponseDefaultTypeInternal _AuthResponse_default_instance_;

inline constexpr AuthRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hostname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AuthRequest::AuthRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AuthRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthRequestDefaultTypeInternal() {}
  union {
    AuthRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthRequestDefaultTypeInternal _AuthRequest_default_instance_;

inline constexpr AddDeviceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : jwt_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        device_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AddDeviceResponse::AddDeviceResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AddDeviceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddDeviceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddDeviceResponseDefaultTypeInternal() {}
  union {
    AddDeviceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddDeviceResponseDefaultTypeInternal _AddDeviceResponse_default_instance_;

inline constexpr AddDeviceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hostname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        location_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hardware_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        os_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ip_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        serial_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AddDeviceRequest::AddDeviceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AddDeviceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddDeviceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddDeviceRequestDefaultTypeInternal() {}
  union {
    AddDeviceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddDeviceRequestDefaultTypeInternal _AddDeviceRequest_default_instance_;

inline constexpr UpdateDeviceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_info_{nullptr},
        device_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateDeviceRequest::UpdateDeviceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateDeviceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDeviceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDeviceRequestDefaultTypeInternal() {}
  union {
    UpdateDeviceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDeviceRequestDefaultTypeInternal _UpdateDeviceRequest_default_instance_;

inline constexpr GetDevicesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : devices_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetDevicesResponse::GetDevicesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetDevicesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDevicesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDevicesResponseDefaultTypeInternal() {}
  union {
    GetDevicesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDevicesResponseDefaultTypeInternal _GetDevicesResponse_default_instance_;

inline constexpr GetDeviceByIdResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_{nullptr},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR GetDeviceByIdResponse::GetDeviceByIdResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetDeviceByIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDeviceByIdResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDeviceByIdResponseDefaultTypeInternal() {}
  union {
    GetDeviceByIdResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDeviceByIdResponseDefaultTypeInternal _GetDeviceByIdResponse_default_instance_;
}  // namespace provisioning
static ::_pb::Metadata file_level_metadata_provisioning_2eproto[13];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_provisioning_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_provisioning_2eproto = nullptr;
const ::uint32_t TableStruct_provisioning_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::provisioning::AuthRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::provisioning::AuthRequest, _impl_.hostname_),
    PROTOBUF_FIELD_OFFSET(::provisioning::AuthRequest, _impl_.password_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::provisioning::AuthResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::provisioning::AuthResponse, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::provisioning::AuthResponse, _impl_.jwt_token_),
    PROTOBUF_FIELD_OFFSET(::provisioning::AuthResponse, _impl_.error_message_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::provisioning::DeviceInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::provisioning::DeviceInfo, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::provisioning::DeviceInfo, _impl_.hostname_),
    PROTOBUF_FIELD_OFFSET(::provisioning::DeviceInfo, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::provisioning::DeviceInfo, _impl_.location_),
    PROTOBUF_FIELD_OFFSET(::provisioning::DeviceInfo, _impl_.hardware_type_),
    PROTOBUF_FIELD_OFFSET(::provisioning::DeviceInfo, _impl_.os_type_),
    PROTOBUF_FIELD_OFFSET(::provisioning::DeviceInfo, _impl_.ip_address_),
    PROTOBUF_FIELD_OFFSET(::provisioning::DeviceInfo, _impl_.serial_number_),
    PROTOBUF_FIELD_OFFSET(::provisioning::DeviceInfo, _impl_.created_at_),
    PROTOBUF_FIELD_OFFSET(::provisioning::DeviceInfo, _impl_.updated_at_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::provisioning::AddDeviceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::provisioning::AddDeviceRequest, _impl_.hostname_),
    PROTOBUF_FIELD_OFFSET(::provisioning::AddDeviceRequest, _impl_.password_),
    PROTOBUF_FIELD_OFFSET(::provisioning::AddDeviceRequest, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::provisioning::AddDeviceRequest, _impl_.location_),
    PROTOBUF_FIELD_OFFSET(::provisioning::AddDeviceRequest, _impl_.hardware_type_),
    PROTOBUF_FIELD_OFFSET(::provisioning::AddDeviceRequest, _impl_.os_type_),
    PROTOBUF_FIELD_OFFSET(::provisioning::AddDeviceRequest, _impl_.ip_address_),
    PROTOBUF_FIELD_OFFSET(::provisioning::AddDeviceRequest, _impl_.serial_number_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::provisioning::AddDeviceResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::provisioning::AddDeviceResponse, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::provisioning::AddDeviceResponse, _impl_.device_id_),
    PROTOBUF_FIELD_OFFSET(::provisioning::AddDeviceResponse, _impl_.jwt_token_),
    PROTOBUF_FIELD_OFFSET(::provisioning::AddDeviceResponse, _impl_.error_message_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::provisioning::DeleteDeviceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::provisioning::DeleteDeviceRequest, _impl_.device_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::provisioning::DeleteDeviceResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::provisioning::DeleteDeviceResponse, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::provisioning::DeleteDeviceResponse, _impl_.error_message_),
    PROTOBUF_FIELD_OFFSET(::provisioning::UpdateDeviceRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::provisioning::UpdateDeviceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::provisioning::UpdateDeviceRequest, _impl_.device_id_),
    PROTOBUF_FIELD_OFFSET(::provisioning::UpdateDeviceRequest, _impl_.device_info_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::provisioning::UpdateDeviceResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::provisioning::UpdateDeviceResponse, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::provisioning::UpdateDeviceResponse, _impl_.error_message_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::provisioning::GetDevicesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::provisioning::GetDevicesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::provisioning::GetDevicesResponse, _impl_.devices_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::provisioning::GetDeviceByIdRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::provisioning::GetDeviceByIdRequest, _impl_.device_id_),
    PROTOBUF_FIELD_OFFSET(::provisioning::GetDeviceByIdResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::provisioning::GetDeviceByIdResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::provisioning::GetDeviceByIdResponse, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::provisioning::GetDeviceByIdResponse, _impl_.device_),
    PROTOBUF_FIELD_OFFSET(::provisioning::GetDeviceByIdResponse, _impl_.error_message_),
    ~0u,
    0,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::provisioning::AuthRequest)},
        {10, -1, -1, sizeof(::provisioning::AuthResponse)},
        {21, -1, -1, sizeof(::provisioning::DeviceInfo)},
        {39, -1, -1, sizeof(::provisioning::AddDeviceRequest)},
        {55, -1, -1, sizeof(::provisioning::AddDeviceResponse)},
        {67, -1, -1, sizeof(::provisioning::DeleteDeviceRequest)},
        {76, -1, -1, sizeof(::provisioning::DeleteDeviceResponse)},
        {86, 96, -1, sizeof(::provisioning::UpdateDeviceRequest)},
        {98, -1, -1, sizeof(::provisioning::UpdateDeviceResponse)},
        {108, -1, -1, sizeof(::provisioning::GetDevicesRequest)},
        {116, -1, -1, sizeof(::provisioning::GetDevicesResponse)},
        {125, -1, -1, sizeof(::provisioning::GetDeviceByIdRequest)},
        {134, 145, -1, sizeof(::provisioning::GetDeviceByIdResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::provisioning::_AuthRequest_default_instance_._instance,
    &::provisioning::_AuthResponse_default_instance_._instance,
    &::provisioning::_DeviceInfo_default_instance_._instance,
    &::provisioning::_AddDeviceRequest_default_instance_._instance,
    &::provisioning::_AddDeviceResponse_default_instance_._instance,
    &::provisioning::_DeleteDeviceRequest_default_instance_._instance,
    &::provisioning::_DeleteDeviceResponse_default_instance_._instance,
    &::provisioning::_UpdateDeviceRequest_default_instance_._instance,
    &::provisioning::_UpdateDeviceResponse_default_instance_._instance,
    &::provisioning::_GetDevicesRequest_default_instance_._instance,
    &::provisioning::_GetDevicesResponse_default_instance_._instance,
    &::provisioning::_GetDeviceByIdRequest_default_instance_._instance,
    &::provisioning::_GetDeviceByIdResponse_default_instance_._instance,
};
const char descriptor_table_protodef_provisioning_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\022provisioning.proto\022\014provisioning\"1\n\013Au"
    "thRequest\022\020\n\010hostname\030\001 \001(\t\022\020\n\010password\030"
    "\002 \001(\t\"I\n\014AuthResponse\022\017\n\007success\030\001 \001(\010\022\021"
    "\n\tjwt_token\030\002 \001(\t\022\025\n\rerror_message\030\003 \001(\t"
    "\"\305\001\n\nDeviceInfo\022\n\n\002id\030\001 \001(\005\022\020\n\010hostname\030"
    "\002 \001(\t\022\014\n\004user\030\003 \001(\t\022\020\n\010location\030\004 \001(\t\022\025\n"
    "\rhardware_type\030\005 \001(\t\022\017\n\007os_type\030\006 \001(\t\022\022\n"
    "\nip_address\030\007 \001(\t\022\025\n\rserial_number\030\010 \001(\t"
    "\022\022\n\ncreated_at\030\t \001(\t\022\022\n\nupdated_at\030\n \001(\t"
    "\"\251\001\n\020AddDeviceRequest\022\020\n\010hostname\030\001 \001(\t\022"
    "\020\n\010password\030\002 \001(\t\022\014\n\004user\030\003 \001(\t\022\020\n\010locat"
    "ion\030\004 \001(\t\022\025\n\rhardware_type\030\005 \001(\t\022\017\n\007os_t"
    "ype\030\006 \001(\t\022\022\n\nip_address\030\007 \001(\t\022\025\n\rserial_"
    "number\030\010 \001(\t\"a\n\021AddDeviceResponse\022\017\n\007suc"
    "cess\030\001 \001(\010\022\021\n\tdevice_id\030\002 \001(\005\022\021\n\tjwt_tok"
    "en\030\003 \001(\t\022\025\n\rerror_message\030\004 \001(\t\"(\n\023Delet"
    "eDeviceRequest\022\021\n\tdevice_id\030\001 \001(\005\">\n\024Del"
    "eteDeviceResponse\022\017\n\007success\030\001 \001(\010\022\025\n\rer"
    "ror_message\030\002 \001(\t\"W\n\023UpdateDeviceRequest"
    "\022\021\n\tdevice_id\030\001 \001(\005\022-\n\013device_info\030\002 \001(\013"
    "2\030.provisioning.DeviceInfo\">\n\024UpdateDevi"
    "ceResponse\022\017\n\007success\030\001 \001(\010\022\025\n\rerror_mes"
    "sage\030\002 \001(\t\"\023\n\021GetDevicesRequest\"\?\n\022GetDe"
    "vicesResponse\022)\n\007devices\030\001 \003(\0132\030.provisi"
    "oning.DeviceInfo\")\n\024GetDeviceByIdRequest"
    "\022\021\n\tdevice_id\030\001 \001(\005\"i\n\025GetDeviceByIdResp"
    "onse\022\017\n\007success\030\001 \001(\010\022(\n\006device\030\002 \001(\0132\030."
    "provisioning.DeviceInfo\022\025\n\rerror_message"
    "\030\003 \001(\t2\206\004\n\023ProvisioningService\022E\n\014Authen"
    "ticate\022\031.provisioning.AuthRequest\032\032.prov"
    "isioning.AuthResponse\022L\n\tAddDevice\022\036.pro"
    "visioning.AddDeviceRequest\032\037.provisionin"
    "g.AddDeviceResponse\022U\n\014DeleteDevice\022!.pr"
    "ovisioning.DeleteDeviceRequest\032\".provisi"
    "oning.DeleteDeviceResponse\022U\n\014UpdateDevi"
    "ce\022!.provisioning.UpdateDeviceRequest\032\"."
    "provisioning.UpdateDeviceResponse\022R\n\rGet"
    "AllDevices\022\037.provisioning.GetDevicesRequ"
    "est\032 .provisioning.GetDevicesResponse\022X\n"
    "\rGetDeviceById\022\".provisioning.GetDeviceB"
    "yIdRequest\032#.provisioning.GetDeviceByIdR"
    "esponseb\006proto3"
};
static ::absl::once_flag descriptor_table_provisioning_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_provisioning_2eproto = {
    false,
    false,
    1655,
    descriptor_table_protodef_provisioning_2eproto,
    "provisioning.proto",
    &descriptor_table_provisioning_2eproto_once,
    nullptr,
    0,
    13,
    schemas,
    file_default_instances,
    TableStruct_provisioning_2eproto::offsets,
    file_level_metadata_provisioning_2eproto,
    file_level_enum_descriptors_provisioning_2eproto,
    file_level_service_descriptors_provisioning_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_provisioning_2eproto_getter() {
  return &descriptor_table_provisioning_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_provisioning_2eproto(&descriptor_table_provisioning_2eproto);
namespace provisioning {
// ===================================================================

class AuthRequest::_Internal {
 public:
};

AuthRequest::AuthRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:provisioning.AuthRequest)
}
inline PROTOBUF_NDEBUG_INLINE AuthRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : hostname_(arena, from.hostname_),
        password_(arena, from.password_),
        _cached_size_{0} {}

AuthRequest::AuthRequest(
    ::google::protobuf::Arena* arena,
    const AuthRequest& from)
    : ::google::protobuf::Message(arena) {
  AuthRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:provisioning.AuthRequest)
}
inline PROTOBUF_NDEBUG_INLINE AuthRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hostname_(arena),
        password_(arena),
        _cached_size_{0} {}

inline void AuthRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AuthRequest::~AuthRequest() {
  // @@protoc_insertion_point(destructor:provisioning.AuthRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AuthRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.hostname_.Destroy();
  _impl_.password_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AuthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:provisioning.AuthRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hostname_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AuthRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> AuthRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AuthRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.password_)}},
    // string hostname = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.hostname_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string hostname = 1;
    {PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.hostname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(AuthRequest, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\10\10\0\0\0\0\0"
    "provisioning.AuthRequest"
    "hostname"
    "password"
  }},
};

::uint8_t* AuthRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:provisioning.AuthRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string hostname = 1;
  if (!this->_internal_hostname().empty()) {
    const std::string& _s = this->_internal_hostname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.AuthRequest.hostname");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.AuthRequest.password");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:provisioning.AuthRequest)
  return target;
}

::size_t AuthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:provisioning.AuthRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hostname = 1;
  if (!this->_internal_hostname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_hostname());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AuthRequest::_class_data_ = {
    AuthRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AuthRequest::GetClassData() const {
  return &_class_data_;
}

void AuthRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AuthRequest*>(&to_msg);
  auto& from = static_cast<const AuthRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:provisioning.AuthRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hostname().empty()) {
    _this->_internal_set_hostname(from._internal_hostname());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AuthRequest::CopyFrom(const AuthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:provisioning.AuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AuthRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AuthRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AuthRequest::InternalSwap(AuthRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hostname_, &other->_impl_.hostname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
}

::google::protobuf::Metadata AuthRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provisioning_2eproto_getter, &descriptor_table_provisioning_2eproto_once,
      file_level_metadata_provisioning_2eproto[0]);
}
// ===================================================================

class AuthResponse::_Internal {
 public:
};

AuthResponse::AuthResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:provisioning.AuthResponse)
}
inline PROTOBUF_NDEBUG_INLINE AuthResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : jwt_token_(arena, from.jwt_token_),
        error_message_(arena, from.error_message_),
        _cached_size_{0} {}

AuthResponse::AuthResponse(
    ::google::protobuf::Arena* arena,
    const AuthResponse& from)
    : ::google::protobuf::Message(arena) {
  AuthResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:provisioning.AuthResponse)
}
inline PROTOBUF_NDEBUG_INLINE AuthResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : jwt_token_(arena),
        error_message_(arena),
        _cached_size_{0} {}

inline void AuthResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
AuthResponse::~AuthResponse() {
  // @@protoc_insertion_point(destructor:provisioning.AuthResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AuthResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.jwt_token_.Destroy();
  _impl_.error_message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:provisioning.AuthResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.jwt_token_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AuthResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 56, 2> AuthResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AuthResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AuthResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.success_)}},
    // string jwt_token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.jwt_token_)}},
    // string error_message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.error_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string jwt_token = 2;
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.jwt_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string error_message = 3;
    {PROTOBUF_FIELD_OFFSET(AuthResponse, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\0\11\15\0\0\0\0"
    "provisioning.AuthResponse"
    "jwt_token"
    "error_message"
  }},
};

::uint8_t* AuthResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:provisioning.AuthResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  // string jwt_token = 2;
  if (!this->_internal_jwt_token().empty()) {
    const std::string& _s = this->_internal_jwt_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.AuthResponse.jwt_token");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    const std::string& _s = this->_internal_error_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.AuthResponse.error_message");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:provisioning.AuthResponse)
  return target;
}

::size_t AuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:provisioning.AuthResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string jwt_token = 2;
  if (!this->_internal_jwt_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_jwt_token());
  }

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_error_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AuthResponse::_class_data_ = {
    AuthResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AuthResponse::GetClassData() const {
  return &_class_data_;
}

void AuthResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AuthResponse*>(&to_msg);
  auto& from = static_cast<const AuthResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:provisioning.AuthResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_jwt_token().empty()) {
    _this->_internal_set_jwt_token(from._internal_jwt_token());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AuthResponse::CopyFrom(const AuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:provisioning.AuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AuthResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AuthResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AuthResponse::InternalSwap(AuthResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.jwt_token_, &other->_impl_.jwt_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata AuthResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provisioning_2eproto_getter, &descriptor_table_provisioning_2eproto_once,
      file_level_metadata_provisioning_2eproto[1]);
}
// ===================================================================

class DeviceInfo::_Internal {
 public:
};

DeviceInfo::DeviceInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:provisioning.DeviceInfo)
}
inline PROTOBUF_NDEBUG_INLINE DeviceInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : hostname_(arena, from.hostname_),
        user_(arena, from.user_),
        location_(arena, from.location_),
        hardware_type_(arena, from.hardware_type_),
        os_type_(arena, from.os_type_),
        ip_address_(arena, from.ip_address_),
        serial_number_(arena, from.serial_number_),
        created_at_(arena, from.created_at_),
        updated_at_(arena, from.updated_at_),
        _cached_size_{0} {}

DeviceInfo::DeviceInfo(
    ::google::protobuf::Arena* arena,
    const DeviceInfo& from)
    : ::google::protobuf::Message(arena) {
  DeviceInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:provisioning.DeviceInfo)
}
inline PROTOBUF_NDEBUG_INLINE DeviceInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hostname_(arena),
        user_(arena),
        location_(arena),
        hardware_type_(arena),
        os_type_(arena),
        ip_address_(arena),
        serial_number_(arena),
        created_at_(arena),
        updated_at_(arena),
        _cached_size_{0} {}

inline void DeviceInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
DeviceInfo::~DeviceInfo() {
  // @@protoc_insertion_point(destructor:provisioning.DeviceInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.hostname_.Destroy();
  _impl_.user_.Destroy();
  _impl_.location_.Destroy();
  _impl_.hardware_type_.Destroy();
  _impl_.os_type_.Destroy();
  _impl_.ip_address_.Destroy();
  _impl_.serial_number_.Destroy();
  _impl_.created_at_.Destroy();
  _impl_.updated_at_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:provisioning.DeviceInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hostname_.ClearToEmpty();
  _impl_.user_.ClearToEmpty();
  _impl_.location_.ClearToEmpty();
  _impl_.hardware_type_.ClearToEmpty();
  _impl_.os_type_.ClearToEmpty();
  _impl_.ip_address_.ClearToEmpty();
  _impl_.serial_number_.ClearToEmpty();
  _impl_.created_at_.ClearToEmpty();
  _impl_.updated_at_.ClearToEmpty();
  _impl_.id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 123, 2> DeviceInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceInfo, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.id_)}},
    // string hostname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.hostname_)}},
    // string user = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.user_)}},
    // string location = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.location_)}},
    // string hardware_type = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.hardware_type_)}},
    // string os_type = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.os_type_)}},
    // string ip_address = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.ip_address_)}},
    // string serial_number = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.serial_number_)}},
    // string created_at = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.created_at_)}},
    // string updated_at = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.updated_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string hostname = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.hostname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user = 3;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.user_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string location = 4;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.location_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string hardware_type = 5;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.hardware_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string os_type = 6;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.os_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ip_address = 7;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.ip_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string serial_number = 8;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.serial_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string created_at = 9;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.created_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string updated_at = 10;
    {PROTOBUF_FIELD_OFFSET(DeviceInfo, _impl_.updated_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\0\10\4\10\15\7\12\15\12\12\0\0\0\0\0"
    "provisioning.DeviceInfo"
    "hostname"
    "user"
    "location"
    "hardware_type"
    "os_type"
    "ip_address"
    "serial_number"
    "created_at"
    "updated_at"
  }},
};

::uint8_t* DeviceInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:provisioning.DeviceInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string hostname = 2;
  if (!this->_internal_hostname().empty()) {
    const std::string& _s = this->_internal_hostname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.DeviceInfo.hostname");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string user = 3;
  if (!this->_internal_user().empty()) {
    const std::string& _s = this->_internal_user();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.DeviceInfo.user");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string location = 4;
  if (!this->_internal_location().empty()) {
    const std::string& _s = this->_internal_location();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.DeviceInfo.location");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string hardware_type = 5;
  if (!this->_internal_hardware_type().empty()) {
    const std::string& _s = this->_internal_hardware_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.DeviceInfo.hardware_type");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string os_type = 6;
  if (!this->_internal_os_type().empty()) {
    const std::string& _s = this->_internal_os_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.DeviceInfo.os_type");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string ip_address = 7;
  if (!this->_internal_ip_address().empty()) {
    const std::string& _s = this->_internal_ip_address();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.DeviceInfo.ip_address");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string serial_number = 8;
  if (!this->_internal_serial_number().empty()) {
    const std::string& _s = this->_internal_serial_number();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.DeviceInfo.serial_number");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // string created_at = 9;
  if (!this->_internal_created_at().empty()) {
    const std::string& _s = this->_internal_created_at();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.DeviceInfo.created_at");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // string updated_at = 10;
  if (!this->_internal_updated_at().empty()) {
    const std::string& _s = this->_internal_updated_at();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.DeviceInfo.updated_at");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:provisioning.DeviceInfo)
  return target;
}

::size_t DeviceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:provisioning.DeviceInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hostname = 2;
  if (!this->_internal_hostname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_hostname());
  }

  // string user = 3;
  if (!this->_internal_user().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user());
  }

  // string location = 4;
  if (!this->_internal_location().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_location());
  }

  // string hardware_type = 5;
  if (!this->_internal_hardware_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_hardware_type());
  }

  // string os_type = 6;
  if (!this->_internal_os_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_os_type());
  }

  // string ip_address = 7;
  if (!this->_internal_ip_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip_address());
  }

  // string serial_number = 8;
  if (!this->_internal_serial_number().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_serial_number());
  }

  // string created_at = 9;
  if (!this->_internal_created_at().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_created_at());
  }

  // string updated_at = 10;
  if (!this->_internal_updated_at().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_updated_at());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceInfo::_class_data_ = {
    DeviceInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceInfo::GetClassData() const {
  return &_class_data_;
}

void DeviceInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceInfo*>(&to_msg);
  auto& from = static_cast<const DeviceInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:provisioning.DeviceInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hostname().empty()) {
    _this->_internal_set_hostname(from._internal_hostname());
  }
  if (!from._internal_user().empty()) {
    _this->_internal_set_user(from._internal_user());
  }
  if (!from._internal_location().empty()) {
    _this->_internal_set_location(from._internal_location());
  }
  if (!from._internal_hardware_type().empty()) {
    _this->_internal_set_hardware_type(from._internal_hardware_type());
  }
  if (!from._internal_os_type().empty()) {
    _this->_internal_set_os_type(from._internal_os_type());
  }
  if (!from._internal_ip_address().empty()) {
    _this->_internal_set_ip_address(from._internal_ip_address());
  }
  if (!from._internal_serial_number().empty()) {
    _this->_internal_set_serial_number(from._internal_serial_number());
  }
  if (!from._internal_created_at().empty()) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (!from._internal_updated_at().empty()) {
    _this->_internal_set_updated_at(from._internal_updated_at());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceInfo::CopyFrom(const DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:provisioning.DeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceInfo::InternalSwap(DeviceInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hostname_, &other->_impl_.hostname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_, &other->_impl_.user_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.location_, &other->_impl_.location_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hardware_type_, &other->_impl_.hardware_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.os_type_, &other->_impl_.os_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_address_, &other->_impl_.ip_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.serial_number_, &other->_impl_.serial_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_at_, &other->_impl_.created_at_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.updated_at_, &other->_impl_.updated_at_, arena);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata DeviceInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provisioning_2eproto_getter, &descriptor_table_provisioning_2eproto_once,
      file_level_metadata_provisioning_2eproto[2]);
}
// ===================================================================

class AddDeviceRequest::_Internal {
 public:
};

AddDeviceRequest::AddDeviceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:provisioning.AddDeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : hostname_(arena, from.hostname_),
        password_(arena, from.password_),
        user_(arena, from.user_),
        location_(arena, from.location_),
        hardware_type_(arena, from.hardware_type_),
        os_type_(arena, from.os_type_),
        ip_address_(arena, from.ip_address_),
        serial_number_(arena, from.serial_number_),
        _cached_size_{0} {}

AddDeviceRequest::AddDeviceRequest(
    ::google::protobuf::Arena* arena,
    const AddDeviceRequest& from)
    : ::google::protobuf::Message(arena) {
  AddDeviceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:provisioning.AddDeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hostname_(arena),
        password_(arena),
        user_(arena),
        location_(arena),
        hardware_type_(arena),
        os_type_(arena),
        ip_address_(arena),
        serial_number_(arena),
        _cached_size_{0} {}

inline void AddDeviceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AddDeviceRequest::~AddDeviceRequest() {
  // @@protoc_insertion_point(destructor:provisioning.AddDeviceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AddDeviceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.hostname_.Destroy();
  _impl_.password_.Destroy();
  _impl_.user_.Destroy();
  _impl_.location_.Destroy();
  _impl_.hardware_type_.Destroy();
  _impl_.os_type_.Destroy();
  _impl_.ip_address_.Destroy();
  _impl_.serial_number_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AddDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:provisioning.AddDeviceRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hostname_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _impl_.user_.ClearToEmpty();
  _impl_.location_.ClearToEmpty();
  _impl_.hardware_type_.ClearToEmpty();
  _impl_.os_type_.ClearToEmpty();
  _impl_.ip_address_.ClearToEmpty();
  _impl_.serial_number_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AddDeviceRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 117, 2> AddDeviceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AddDeviceRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string serial_number = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(AddDeviceRequest, _impl_.serial_number_)}},
    // string hostname = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AddDeviceRequest, _impl_.hostname_)}},
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AddDeviceRequest, _impl_.password_)}},
    // string user = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AddDeviceRequest, _impl_.user_)}},
    // string location = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(AddDeviceRequest, _impl_.location_)}},
    // string hardware_type = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AddDeviceRequest, _impl_.hardware_type_)}},
    // string os_type = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(AddDeviceRequest, _impl_.os_type_)}},
    // string ip_address = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(AddDeviceRequest, _impl_.ip_address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string hostname = 1;
    {PROTOBUF_FIELD_OFFSET(AddDeviceRequest, _impl_.hostname_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(AddDeviceRequest, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user = 3;
    {PROTOBUF_FIELD_OFFSET(AddDeviceRequest, _impl_.user_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string location = 4;
    {PROTOBUF_FIELD_OFFSET(AddDeviceRequest, _impl_.location_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string hardware_type = 5;
    {PROTOBUF_FIELD_OFFSET(AddDeviceRequest, _impl_.hardware_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string os_type = 6;
    {PROTOBUF_FIELD_OFFSET(AddDeviceRequest, _impl_.os_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ip_address = 7;
    {PROTOBUF_FIELD_OFFSET(AddDeviceRequest, _impl_.ip_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string serial_number = 8;
    {PROTOBUF_FIELD_OFFSET(AddDeviceRequest, _impl_.serial_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\10\10\4\10\15\7\12\15\0\0\0\0\0\0\0"
    "provisioning.AddDeviceRequest"
    "hostname"
    "password"
    "user"
    "location"
    "hardware_type"
    "os_type"
    "ip_address"
    "serial_number"
  }},
};

::uint8_t* AddDeviceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:provisioning.AddDeviceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string hostname = 1;
  if (!this->_internal_hostname().empty()) {
    const std::string& _s = this->_internal_hostname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.AddDeviceRequest.hostname");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.AddDeviceRequest.password");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string user = 3;
  if (!this->_internal_user().empty()) {
    const std::string& _s = this->_internal_user();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.AddDeviceRequest.user");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string location = 4;
  if (!this->_internal_location().empty()) {
    const std::string& _s = this->_internal_location();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.AddDeviceRequest.location");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string hardware_type = 5;
  if (!this->_internal_hardware_type().empty()) {
    const std::string& _s = this->_internal_hardware_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.AddDeviceRequest.hardware_type");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string os_type = 6;
  if (!this->_internal_os_type().empty()) {
    const std::string& _s = this->_internal_os_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.AddDeviceRequest.os_type");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string ip_address = 7;
  if (!this->_internal_ip_address().empty()) {
    const std::string& _s = this->_internal_ip_address();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.AddDeviceRequest.ip_address");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string serial_number = 8;
  if (!this->_internal_serial_number().empty()) {
    const std::string& _s = this->_internal_serial_number();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.AddDeviceRequest.serial_number");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:provisioning.AddDeviceRequest)
  return target;
}

::size_t AddDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:provisioning.AddDeviceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hostname = 1;
  if (!this->_internal_hostname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_hostname());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  // string user = 3;
  if (!this->_internal_user().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user());
  }

  // string location = 4;
  if (!this->_internal_location().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_location());
  }

  // string hardware_type = 5;
  if (!this->_internal_hardware_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_hardware_type());
  }

  // string os_type = 6;
  if (!this->_internal_os_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_os_type());
  }

  // string ip_address = 7;
  if (!this->_internal_ip_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip_address());
  }

  // string serial_number = 8;
  if (!this->_internal_serial_number().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_serial_number());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AddDeviceRequest::_class_data_ = {
    AddDeviceRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AddDeviceRequest::GetClassData() const {
  return &_class_data_;
}

void AddDeviceRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AddDeviceRequest*>(&to_msg);
  auto& from = static_cast<const AddDeviceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:provisioning.AddDeviceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hostname().empty()) {
    _this->_internal_set_hostname(from._internal_hostname());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (!from._internal_user().empty()) {
    _this->_internal_set_user(from._internal_user());
  }
  if (!from._internal_location().empty()) {
    _this->_internal_set_location(from._internal_location());
  }
  if (!from._internal_hardware_type().empty()) {
    _this->_internal_set_hardware_type(from._internal_hardware_type());
  }
  if (!from._internal_os_type().empty()) {
    _this->_internal_set_os_type(from._internal_os_type());
  }
  if (!from._internal_ip_address().empty()) {
    _this->_internal_set_ip_address(from._internal_ip_address());
  }
  if (!from._internal_serial_number().empty()) {
    _this->_internal_set_serial_number(from._internal_serial_number());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddDeviceRequest::CopyFrom(const AddDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:provisioning.AddDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AddDeviceRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AddDeviceRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AddDeviceRequest::InternalSwap(AddDeviceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hostname_, &other->_impl_.hostname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_, &other->_impl_.user_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.location_, &other->_impl_.location_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hardware_type_, &other->_impl_.hardware_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.os_type_, &other->_impl_.os_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_address_, &other->_impl_.ip_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.serial_number_, &other->_impl_.serial_number_, arena);
}

::google::protobuf::Metadata AddDeviceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provisioning_2eproto_getter, &descriptor_table_provisioning_2eproto_once,
      file_level_metadata_provisioning_2eproto[3]);
}
// ===================================================================

class AddDeviceResponse::_Internal {
 public:
};

AddDeviceResponse::AddDeviceResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:provisioning.AddDeviceResponse)
}
inline PROTOBUF_NDEBUG_INLINE AddDeviceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : jwt_token_(arena, from.jwt_token_),
        error_message_(arena, from.error_message_),
        _cached_size_{0} {}

AddDeviceResponse::AddDeviceResponse(
    ::google::protobuf::Arena* arena,
    const AddDeviceResponse& from)
    : ::google::protobuf::Message(arena) {
  AddDeviceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, success_),
           offsetof(Impl_, device_id_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::device_id_));

  // @@protoc_insertion_point(copy_constructor:provisioning.AddDeviceResponse)
}
inline PROTOBUF_NDEBUG_INLINE AddDeviceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : jwt_token_(arena),
        error_message_(arena),
        _cached_size_{0} {}

inline void AddDeviceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           0,
           offsetof(Impl_, device_id_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::device_id_));
}
AddDeviceResponse::~AddDeviceResponse() {
  // @@protoc_insertion_point(destructor:provisioning.AddDeviceResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AddDeviceResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.jwt_token_.Destroy();
  _impl_.error_message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AddDeviceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:provisioning.AddDeviceResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.jwt_token_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  ::memset(&_impl_.success_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.device_id_) -
      reinterpret_cast<char*>(&_impl_.success_)) + sizeof(_impl_.device_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AddDeviceResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 61, 2> AddDeviceResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AddDeviceResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string error_message = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(AddDeviceResponse, _impl_.error_message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AddDeviceResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AddDeviceResponse, _impl_.success_)}},
    // int32 device_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AddDeviceResponse, _impl_.device_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AddDeviceResponse, _impl_.device_id_)}},
    // string jwt_token = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AddDeviceResponse, _impl_.jwt_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(AddDeviceResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 device_id = 2;
    {PROTOBUF_FIELD_OFFSET(AddDeviceResponse, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string jwt_token = 3;
    {PROTOBUF_FIELD_OFFSET(AddDeviceResponse, _impl_.jwt_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string error_message = 4;
    {PROTOBUF_FIELD_OFFSET(AddDeviceResponse, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\0\0\11\15\0\0\0"
    "provisioning.AddDeviceResponse"
    "jwt_token"
    "error_message"
  }},
};

::uint8_t* AddDeviceResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:provisioning.AddDeviceResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  // int32 device_id = 2;
  if (this->_internal_device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_device_id(), target);
  }

  // string jwt_token = 3;
  if (!this->_internal_jwt_token().empty()) {
    const std::string& _s = this->_internal_jwt_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.AddDeviceResponse.jwt_token");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string error_message = 4;
  if (!this->_internal_error_message().empty()) {
    const std::string& _s = this->_internal_error_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.AddDeviceResponse.error_message");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:provisioning.AddDeviceResponse)
  return target;
}

::size_t AddDeviceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:provisioning.AddDeviceResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string jwt_token = 3;
  if (!this->_internal_jwt_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_jwt_token());
  }

  // string error_message = 4;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_error_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  // int32 device_id = 2;
  if (this->_internal_device_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_device_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AddDeviceResponse::_class_data_ = {
    AddDeviceResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AddDeviceResponse::GetClassData() const {
  return &_class_data_;
}

void AddDeviceResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AddDeviceResponse*>(&to_msg);
  auto& from = static_cast<const AddDeviceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:provisioning.AddDeviceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_jwt_token().empty()) {
    _this->_internal_set_jwt_token(from._internal_jwt_token());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  if (from._internal_device_id() != 0) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddDeviceResponse::CopyFrom(const AddDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:provisioning.AddDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AddDeviceResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AddDeviceResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AddDeviceResponse::InternalSwap(AddDeviceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.jwt_token_, &other->_impl_.jwt_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddDeviceResponse, _impl_.device_id_)
      + sizeof(AddDeviceResponse::_impl_.device_id_)
      - PROTOBUF_FIELD_OFFSET(AddDeviceResponse, _impl_.success_)>(
          reinterpret_cast<char*>(&_impl_.success_),
          reinterpret_cast<char*>(&other->_impl_.success_));
}

::google::protobuf::Metadata AddDeviceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provisioning_2eproto_getter, &descriptor_table_provisioning_2eproto_once,
      file_level_metadata_provisioning_2eproto[4]);
}
// ===================================================================

class DeleteDeviceRequest::_Internal {
 public:
};

DeleteDeviceRequest::DeleteDeviceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:provisioning.DeleteDeviceRequest)
}
DeleteDeviceRequest::DeleteDeviceRequest(
    ::google::protobuf::Arena* arena, const DeleteDeviceRequest& from)
    : DeleteDeviceRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DeleteDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DeleteDeviceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.device_id_ = {};
}
DeleteDeviceRequest::~DeleteDeviceRequest() {
  // @@protoc_insertion_point(destructor:provisioning.DeleteDeviceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeleteDeviceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeleteDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:provisioning.DeleteDeviceRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeleteDeviceRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> DeleteDeviceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeleteDeviceRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 device_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeleteDeviceRequest, _impl_.device_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteDeviceRequest, _impl_.device_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 device_id = 1;
    {PROTOBUF_FIELD_OFFSET(DeleteDeviceRequest, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* DeleteDeviceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:provisioning.DeleteDeviceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 device_id = 1;
  if (this->_internal_device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_device_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:provisioning.DeleteDeviceRequest)
  return target;
}

::size_t DeleteDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:provisioning.DeleteDeviceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 device_id = 1;
  if (this->_internal_device_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_device_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeleteDeviceRequest::_class_data_ = {
    DeleteDeviceRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeleteDeviceRequest::GetClassData() const {
  return &_class_data_;
}

void DeleteDeviceRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeleteDeviceRequest*>(&to_msg);
  auto& from = static_cast<const DeleteDeviceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:provisioning.DeleteDeviceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_device_id() != 0) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteDeviceRequest::CopyFrom(const DeleteDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:provisioning.DeleteDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeleteDeviceRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeleteDeviceRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeleteDeviceRequest::InternalSwap(DeleteDeviceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.device_id_, other->_impl_.device_id_);
}

::google::protobuf::Metadata DeleteDeviceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provisioning_2eproto_getter, &descriptor_table_provisioning_2eproto_once,
      file_level_metadata_provisioning_2eproto[5]);
}
// ===================================================================

class DeleteDeviceResponse::_Internal {
 public:
};

DeleteDeviceResponse::DeleteDeviceResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:provisioning.DeleteDeviceResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeleteDeviceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : error_message_(arena, from.error_message_),
        _cached_size_{0} {}

DeleteDeviceResponse::DeleteDeviceResponse(
    ::google::protobuf::Arena* arena,
    const DeleteDeviceResponse& from)
    : ::google::protobuf::Message(arena) {
  DeleteDeviceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:provisioning.DeleteDeviceResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeleteDeviceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_message_(arena),
        _cached_size_{0} {}

inline void DeleteDeviceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
DeleteDeviceResponse::~DeleteDeviceResponse() {
  // @@protoc_insertion_point(destructor:provisioning.DeleteDeviceResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeleteDeviceResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.error_message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeleteDeviceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:provisioning.DeleteDeviceResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeleteDeviceResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2> DeleteDeviceResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeleteDeviceResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string error_message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteDeviceResponse, _impl_.error_message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DeleteDeviceResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteDeviceResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(DeleteDeviceResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string error_message = 2;
    {PROTOBUF_FIELD_OFFSET(DeleteDeviceResponse, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\0\15\0\0\0\0\0"
    "provisioning.DeleteDeviceResponse"
    "error_message"
  }},
};

::uint8_t* DeleteDeviceResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:provisioning.DeleteDeviceResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    const std::string& _s = this->_internal_error_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.DeleteDeviceResponse.error_message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:provisioning.DeleteDeviceResponse)
  return target;
}

::size_t DeleteDeviceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:provisioning.DeleteDeviceResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_error_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeleteDeviceResponse::_class_data_ = {
    DeleteDeviceResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeleteDeviceResponse::GetClassData() const {
  return &_class_data_;
}

void DeleteDeviceResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeleteDeviceResponse*>(&to_msg);
  auto& from = static_cast<const DeleteDeviceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:provisioning.DeleteDeviceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteDeviceResponse::CopyFrom(const DeleteDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:provisioning.DeleteDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeleteDeviceResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeleteDeviceResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeleteDeviceResponse::InternalSwap(DeleteDeviceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata DeleteDeviceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provisioning_2eproto_getter, &descriptor_table_provisioning_2eproto_once,
      file_level_metadata_provisioning_2eproto[6]);
}
// ===================================================================

class UpdateDeviceRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateDeviceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_._has_bits_);
  static const ::provisioning::DeviceInfo& device_info(const UpdateDeviceRequest* msg);
  static void set_has_device_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::provisioning::DeviceInfo& UpdateDeviceRequest::_Internal::device_info(const UpdateDeviceRequest* msg) {
  return *msg->_impl_.device_info_;
}
UpdateDeviceRequest::UpdateDeviceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:provisioning.UpdateDeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateDeviceRequest::UpdateDeviceRequest(
    ::google::protobuf::Arena* arena,
    const UpdateDeviceRequest& from)
    : ::google::protobuf::Message(arena) {
  UpdateDeviceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.device_info_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::provisioning::DeviceInfo>(arena, *from._impl_.device_info_)
                : nullptr;
  _impl_.device_id_ = from._impl_.device_id_;

  // @@protoc_insertion_point(copy_constructor:provisioning.UpdateDeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateDeviceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, device_info_),
           0,
           offsetof(Impl_, device_id_) -
               offsetof(Impl_, device_info_) +
               sizeof(Impl_::device_id_));
}
UpdateDeviceRequest::~UpdateDeviceRequest() {
  // @@protoc_insertion_point(destructor:provisioning.UpdateDeviceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateDeviceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.device_info_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UpdateDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:provisioning.UpdateDeviceRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.device_info_ != nullptr);
    _impl_.device_info_->Clear();
  }
  _impl_.device_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateDeviceRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> UpdateDeviceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UpdateDeviceRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .provisioning.DeviceInfo device_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.device_info_)}},
    // int32 device_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateDeviceRequest, _impl_.device_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.device_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 device_id = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.device_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .provisioning.DeviceInfo device_info = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.device_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::provisioning::DeviceInfo>()},
  }}, {{
  }},
};

::uint8_t* UpdateDeviceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:provisioning.UpdateDeviceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 device_id = 1;
  if (this->_internal_device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_device_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .provisioning.DeviceInfo device_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::device_info(this),
        _Internal::device_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:provisioning.UpdateDeviceRequest)
  return target;
}

::size_t UpdateDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:provisioning.UpdateDeviceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .provisioning.DeviceInfo device_info = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.device_info_);
  }

  // int32 device_id = 1;
  if (this->_internal_device_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_device_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UpdateDeviceRequest::_class_data_ = {
    UpdateDeviceRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UpdateDeviceRequest::GetClassData() const {
  return &_class_data_;
}

void UpdateDeviceRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UpdateDeviceRequest*>(&to_msg);
  auto& from = static_cast<const UpdateDeviceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:provisioning.UpdateDeviceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_device_info()->::provisioning::DeviceInfo::MergeFrom(
        from._internal_device_info());
  }
  if (from._internal_device_id() != 0) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDeviceRequest::CopyFrom(const UpdateDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:provisioning.UpdateDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateDeviceRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UpdateDeviceRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UpdateDeviceRequest::InternalSwap(UpdateDeviceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.device_id_)
      + sizeof(UpdateDeviceRequest::_impl_.device_id_)
      - PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.device_info_)>(
          reinterpret_cast<char*>(&_impl_.device_info_),
          reinterpret_cast<char*>(&other->_impl_.device_info_));
}

::google::protobuf::Metadata UpdateDeviceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provisioning_2eproto_getter, &descriptor_table_provisioning_2eproto_once,
      file_level_metadata_provisioning_2eproto[7]);
}
// ===================================================================

class UpdateDeviceResponse::_Internal {
 public:
};

UpdateDeviceResponse::UpdateDeviceResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:provisioning.UpdateDeviceResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDeviceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : error_message_(arena, from.error_message_),
        _cached_size_{0} {}

UpdateDeviceResponse::UpdateDeviceResponse(
    ::google::protobuf::Arena* arena,
    const UpdateDeviceResponse& from)
    : ::google::protobuf::Message(arena) {
  UpdateDeviceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:provisioning.UpdateDeviceResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDeviceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_message_(arena),
        _cached_size_{0} {}

inline void UpdateDeviceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
UpdateDeviceResponse::~UpdateDeviceResponse() {
  // @@protoc_insertion_point(destructor:provisioning.UpdateDeviceResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateDeviceResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.error_message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UpdateDeviceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:provisioning.UpdateDeviceResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateDeviceResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2> UpdateDeviceResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UpdateDeviceResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string error_message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDeviceResponse, _impl_.error_message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UpdateDeviceResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDeviceResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateDeviceResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string error_message = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateDeviceResponse, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\0\15\0\0\0\0\0"
    "provisioning.UpdateDeviceResponse"
    "error_message"
  }},
};

::uint8_t* UpdateDeviceResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:provisioning.UpdateDeviceResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    const std::string& _s = this->_internal_error_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.UpdateDeviceResponse.error_message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:provisioning.UpdateDeviceResponse)
  return target;
}

::size_t UpdateDeviceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:provisioning.UpdateDeviceResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_error_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UpdateDeviceResponse::_class_data_ = {
    UpdateDeviceResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UpdateDeviceResponse::GetClassData() const {
  return &_class_data_;
}

void UpdateDeviceResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UpdateDeviceResponse*>(&to_msg);
  auto& from = static_cast<const UpdateDeviceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:provisioning.UpdateDeviceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDeviceResponse::CopyFrom(const UpdateDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:provisioning.UpdateDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateDeviceResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UpdateDeviceResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UpdateDeviceResponse::InternalSwap(UpdateDeviceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata UpdateDeviceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provisioning_2eproto_getter, &descriptor_table_provisioning_2eproto_once,
      file_level_metadata_provisioning_2eproto[8]);
}
// ===================================================================

class GetDevicesRequest::_Internal {
 public:
};

GetDevicesRequest::GetDevicesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:provisioning.GetDevicesRequest)
}
GetDevicesRequest::GetDevicesRequest(
    ::google::protobuf::Arena* arena,
    const GetDevicesRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GetDevicesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:provisioning.GetDevicesRequest)
}









::google::protobuf::Metadata GetDevicesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provisioning_2eproto_getter, &descriptor_table_provisioning_2eproto_once,
      file_level_metadata_provisioning_2eproto[9]);
}
// ===================================================================

class GetDevicesResponse::_Internal {
 public:
};

GetDevicesResponse::GetDevicesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:provisioning.GetDevicesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetDevicesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : devices_{visibility, arena, from.devices_},
        _cached_size_{0} {}

GetDevicesResponse::GetDevicesResponse(
    ::google::protobuf::Arena* arena,
    const GetDevicesResponse& from)
    : ::google::protobuf::Message(arena) {
  GetDevicesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:provisioning.GetDevicesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetDevicesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : devices_{visibility, arena},
        _cached_size_{0} {}

inline void GetDevicesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetDevicesResponse::~GetDevicesResponse() {
  // @@protoc_insertion_point(destructor:provisioning.GetDevicesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetDevicesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetDevicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:provisioning.GetDevicesResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.devices_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetDevicesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetDevicesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetDevicesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .provisioning.DeviceInfo devices = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetDevicesResponse, _impl_.devices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .provisioning.DeviceInfo devices = 1;
    {PROTOBUF_FIELD_OFFSET(GetDevicesResponse, _impl_.devices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::provisioning::DeviceInfo>()},
  }}, {{
  }},
};

::uint8_t* GetDevicesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:provisioning.GetDevicesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .provisioning.DeviceInfo devices = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_devices_size()); i < n; i++) {
    const auto& repfield = this->_internal_devices().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:provisioning.GetDevicesResponse)
  return target;
}

::size_t GetDevicesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:provisioning.GetDevicesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .provisioning.DeviceInfo devices = 1;
  total_size += 1UL * this->_internal_devices_size();
  for (const auto& msg : this->_internal_devices()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetDevicesResponse::_class_data_ = {
    GetDevicesResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetDevicesResponse::GetClassData() const {
  return &_class_data_;
}

void GetDevicesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetDevicesResponse*>(&to_msg);
  auto& from = static_cast<const GetDevicesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:provisioning.GetDevicesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_devices()->MergeFrom(
      from._internal_devices());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDevicesResponse::CopyFrom(const GetDevicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:provisioning.GetDevicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetDevicesResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetDevicesResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetDevicesResponse::InternalSwap(GetDevicesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.devices_.InternalSwap(&other->_impl_.devices_);
}

::google::protobuf::Metadata GetDevicesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provisioning_2eproto_getter, &descriptor_table_provisioning_2eproto_once,
      file_level_metadata_provisioning_2eproto[10]);
}
// ===================================================================

class GetDeviceByIdRequest::_Internal {
 public:
};

GetDeviceByIdRequest::GetDeviceByIdRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:provisioning.GetDeviceByIdRequest)
}
GetDeviceByIdRequest::GetDeviceByIdRequest(
    ::google::protobuf::Arena* arena, const GetDeviceByIdRequest& from)
    : GetDeviceByIdRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GetDeviceByIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetDeviceByIdRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.device_id_ = {};
}
GetDeviceByIdRequest::~GetDeviceByIdRequest() {
  // @@protoc_insertion_point(destructor:provisioning.GetDeviceByIdRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetDeviceByIdRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetDeviceByIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:provisioning.GetDeviceByIdRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetDeviceByIdRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetDeviceByIdRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetDeviceByIdRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 device_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetDeviceByIdRequest, _impl_.device_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetDeviceByIdRequest, _impl_.device_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 device_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetDeviceByIdRequest, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetDeviceByIdRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:provisioning.GetDeviceByIdRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 device_id = 1;
  if (this->_internal_device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_device_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:provisioning.GetDeviceByIdRequest)
  return target;
}

::size_t GetDeviceByIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:provisioning.GetDeviceByIdRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 device_id = 1;
  if (this->_internal_device_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_device_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetDeviceByIdRequest::_class_data_ = {
    GetDeviceByIdRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetDeviceByIdRequest::GetClassData() const {
  return &_class_data_;
}

void GetDeviceByIdRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetDeviceByIdRequest*>(&to_msg);
  auto& from = static_cast<const GetDeviceByIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:provisioning.GetDeviceByIdRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_device_id() != 0) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDeviceByIdRequest::CopyFrom(const GetDeviceByIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:provisioning.GetDeviceByIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetDeviceByIdRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetDeviceByIdRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetDeviceByIdRequest::InternalSwap(GetDeviceByIdRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.device_id_, other->_impl_.device_id_);
}

::google::protobuf::Metadata GetDeviceByIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provisioning_2eproto_getter, &descriptor_table_provisioning_2eproto_once,
      file_level_metadata_provisioning_2eproto[11]);
}
// ===================================================================

class GetDeviceByIdResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetDeviceByIdResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetDeviceByIdResponse, _impl_._has_bits_);
  static const ::provisioning::DeviceInfo& device(const GetDeviceByIdResponse* msg);
  static void set_has_device(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::provisioning::DeviceInfo& GetDeviceByIdResponse::_Internal::device(const GetDeviceByIdResponse* msg) {
  return *msg->_impl_.device_;
}
GetDeviceByIdResponse::GetDeviceByIdResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:provisioning.GetDeviceByIdResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetDeviceByIdResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        error_message_(arena, from.error_message_) {}

GetDeviceByIdResponse::GetDeviceByIdResponse(
    ::google::protobuf::Arena* arena,
    const GetDeviceByIdResponse& from)
    : ::google::protobuf::Message(arena) {
  GetDeviceByIdResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.device_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::provisioning::DeviceInfo>(arena, *from._impl_.device_)
                : nullptr;
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:provisioning.GetDeviceByIdResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetDeviceByIdResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        error_message_(arena) {}

inline void GetDeviceByIdResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, device_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, device_) +
               sizeof(Impl_::success_));
}
GetDeviceByIdResponse::~GetDeviceByIdResponse() {
  // @@protoc_insertion_point(destructor:provisioning.GetDeviceByIdResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetDeviceByIdResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.error_message_.Destroy();
  delete _impl_.device_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetDeviceByIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:provisioning.GetDeviceByIdResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.device_ != nullptr);
    _impl_.device_->Clear();
  }
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetDeviceByIdResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 56, 2> GetDeviceByIdResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetDeviceByIdResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetDeviceByIdResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetDeviceByIdResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetDeviceByIdResponse, _impl_.success_)}},
    // .provisioning.DeviceInfo device = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GetDeviceByIdResponse, _impl_.device_)}},
    // string error_message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GetDeviceByIdResponse, _impl_.error_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(GetDeviceByIdResponse, _impl_.success_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .provisioning.DeviceInfo device = 2;
    {PROTOBUF_FIELD_OFFSET(GetDeviceByIdResponse, _impl_.device_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string error_message = 3;
    {PROTOBUF_FIELD_OFFSET(GetDeviceByIdResponse, _impl_.error_message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::provisioning::DeviceInfo>()},
  }}, {{
    "\42\0\0\15\0\0\0\0"
    "provisioning.GetDeviceByIdResponse"
    "error_message"
  }},
};

::uint8_t* GetDeviceByIdResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:provisioning.GetDeviceByIdResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .provisioning.DeviceInfo device = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::device(this),
        _Internal::device(this).GetCachedSize(), target, stream);
  }

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    const std::string& _s = this->_internal_error_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "provisioning.GetDeviceByIdResponse.error_message");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:provisioning.GetDeviceByIdResponse)
  return target;
}

::size_t GetDeviceByIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:provisioning.GetDeviceByIdResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_error_message());
  }

  // .provisioning.DeviceInfo device = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.device_);
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetDeviceByIdResponse::_class_data_ = {
    GetDeviceByIdResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetDeviceByIdResponse::GetClassData() const {
  return &_class_data_;
}

void GetDeviceByIdResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetDeviceByIdResponse*>(&to_msg);
  auto& from = static_cast<const GetDeviceByIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:provisioning.GetDeviceByIdResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_device()->::provisioning::DeviceInfo::MergeFrom(
        from._internal_device());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDeviceByIdResponse::CopyFrom(const GetDeviceByIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:provisioning.GetDeviceByIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetDeviceByIdResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetDeviceByIdResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetDeviceByIdResponse::InternalSwap(GetDeviceByIdResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetDeviceByIdResponse, _impl_.success_)
      + sizeof(GetDeviceByIdResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(GetDeviceByIdResponse, _impl_.device_)>(
          reinterpret_cast<char*>(&_impl_.device_),
          reinterpret_cast<char*>(&other->_impl_.device_));
}

::google::protobuf::Metadata GetDeviceByIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_provisioning_2eproto_getter, &descriptor_table_provisioning_2eproto_once,
      file_level_metadata_provisioning_2eproto[12]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace provisioning
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
